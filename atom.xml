<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[陈启超的博客]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://chenqichao.me/"/>
  <updated>2015-11-18T15:17:37.000Z</updated>
  <id>http://chenqichao.me/</id>
  
  <author>
    <name><![CDATA[陈启超]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[041 - Fragment实战02]]></title>
    <link href="http://chenqichao.me/2014/10/24/094-Android-Tutorial-041/"/>
    <id>http://chenqichao.me/2014/10/24/094-Android-Tutorial-041/</id>
    <published>2014-10-23T16:00:00.000Z</published>
    <updated>2015-11-18T15:17:37.000Z</updated>
    <content type="html"><![CDATA[<p>介绍Fragment和Activity生命周期之间的执行顺序</p>
<a id="more"></a>
<ul>
<li>马上学Android  041 - Fragment实战02</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XODA3ODMzMzQw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>附上一张“史上最完整的Fragment/Activity生命周期图”</p>
<p><img src="http://tutorchen.qiniudn.com/complete_android_fragment_lifecycle.png"></p>
<p>出处:<a href="https://github.com/xxv/android-lifecycle" target="_blank" rel="external">https://github.com/xxv/android-lifecycle</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>介绍Fragment和Activity生命周期之间的执行顺序</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[040 - Fragment实战01]]></title>
    <link href="http://chenqichao.me/2014/10/11/088-Android-Tutorial-040/"/>
    <id>http://chenqichao.me/2014/10/11/088-Android-Tutorial-040/</id>
    <published>2014-10-10T16:00:00.000Z</published>
    <updated>2015-11-18T15:17:37.000Z</updated>
    <content type="html"><![CDATA[<p>主要介绍如何在Activity中静态和动态添加Fragment，以及碎片的模拟栈</p>
<a id="more"></a>
<ul>
<li>马上学Android  040 - Fragment实战01</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzk5ODEzNzI0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>Android在3.0版本引入了Fragment(碎片)，它和Activity很类似，可以像Activity一样包含布局，可以在Activity中进行动态的增加，移除或者替换，非常推荐初学者学习Fragment。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要介绍如何在Activity中静态和动态添加Fragment，以及碎片的模拟栈</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[039 - Android Studio Beta版创建项目新特性]]></title>
    <link href="http://chenqichao.me/2014/10/08/085-Android-Tutorial-039/"/>
    <id>http://chenqichao.me/2014/10/08/085-Android-Tutorial-039/</id>
    <published>2014-10-07T16:00:00.000Z</published>
    <updated>2015-11-18T15:17:19.000Z</updated>
    <content type="html"><![CDATA[<p>分享Google 2014 I/O上发布的Android Studio Beta版创建项目向导的新特性</p>
<a id="more"></a>
<ul>
<li>马上学Android 039 - Android Studio Beta版创建项目新特性</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzk4ODI3OTU2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>更多新特性具体可以查看之前博文<a href="http://qichaochen.github.io/2014/09/01/047-Android-Studio-2014-IO-Session/" target="_blank" rel="external">《Android Studio开发工具的新特性》</a></p>
<p>本集视频没有太多的尿点，不喜可以跳过本集，下一发是关于Fragment的视频。Hope you enjoy it~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>分享Google 2014 I/O上发布的Android Studio Beta版创建项目向导的新特性</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio开发工具的新特性]]></title>
    <link href="http://chenqichao.me/2014/09/01/047-Android-Studio-2014-IO-Session/"/>
    <id>http://chenqichao.me/2014/09/01/047-Android-Studio-2014-IO-Session/</id>
    <published>2014-08-31T16:00:00.000Z</published>
    <updated>2015-11-18T15:16:21.000Z</updated>
    <content type="html"><![CDATA[<p>下面的视频翻译自Google I/O 2014上的一个Session，主要介绍Android Studio的新特性和使用新技巧</p>
<a id="more"></a>
<p>Android Studio发布已经一年多的时间了，相信使用过AS的开发者来说，AS的强大不用在强调了，如果你还没开始使用Android Studio 相信我现在就开始入门吧！Android团队目前也是极力推荐使用这个IDE来开发Android的应用，包括App、Wear、TV以及auto，虽然它现在还是Beta版，虽然还有不少Bug，但是用过了之后，你会发现，你离不开Android Studio了！</p>
<p>希望对你你学习Android Studio有帮助。</p>
<embed src="http://player.youku.com/player.php/sid/XNzYwMTU0ODUy/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>如果你是一位Android Studio的初学者，建议先看一下之前的视频教程，连接地址在下方给出！</p>
<p><a href="http://qichaochen.github.io/2014/03/31/028-Android-Tutorial-020/" target="_blank" rel="external">Android使用教程01</a><br><a href="http://qichaochen.github.io/2014/04/01/029-Android-Tutorial-021/" target="_blank" rel="external">Android使用教程02</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>下面的视频翻译自Google I/O 2014上的一个Session，主要介绍Android Studio的新特性和使用新技巧</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://chenqichao.me/tags/Android/"/>
    
      <category term="Android" scheme="http://chenqichao.me/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[038 - Android 主菜单、子菜单和上下文菜单的创建和使用]]></title>
    <link href="http://chenqichao.me/2014/05/20/046-Android-Tutorial-038/"/>
    <id>http://chenqichao.me/2014/05/20/046-Android-Tutorial-038/</id>
    <published>2014-05-19T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>Android菜单</p>
<a id="more"></a>
<p>菜单的使用对于一个Android应用程序是不可缺少的，那么应用程序中如何来使用Android的菜单呢，当然Google官方还是建议布局和代码分开的模式，这样便于管理代码。</p>
<ul>
<li>马上学Android 038 - Android 主菜单、子菜单和上下文菜单的创建和使用</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0NjIzMjI0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>下面给出Android菜单的内容信息，详细可以参考<a href="http://developer.android.com/guide/topics/ui/menus.html#xml" target="_blank" rel="external">Android官方文档</a></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">一、Android菜单类型（官方建议通过xml来创建而非通过代码来创建）</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>选项菜单（主菜单）</span><br><span class="line"></span><br><span class="line">    Android <span class="number">3.0</span>开始之初ActionBar导致菜单风格和<span class="number">3.0</span>以前的版本不一致，但是代码兼容性原因，所以创建方式和以前基本一致。</span><br><span class="line">    xml节点：&lt;menu&gt;、&lt;item&gt;、&lt;group&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>子菜单</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>上下文菜单</span><br><span class="line">    </span><br><span class="line">    上下文菜单可以和任何View进行关联，默认是长按呼出上下文菜单</span><br><span class="line">    使用：</span><br><span class="line">    * registerForContextMenu() - 注册上下文菜单</span><br><span class="line">    * unregisterForContextMenu - 取消注册上下文菜单</span><br><span class="line"></span><br><span class="line">二、响应菜单点击事件方法：</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>实现onMenuItemClickListener接口，重新onMenuItemClick方法</span><br><span class="line"><span class="number">2.</span>重新onMenuItemSelected()</span><br><span class="line"><span class="number">3.</span>对于选项菜单可以重写onOptionItemSelected方法</span><br><span class="line">  对于上下文菜单可以重写onContextItemSelected方法</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">三、问题</span><br><span class="line"><span class="number">1.</span>同时实现三种方法，它们的执行顺序是如何的？</span><br><span class="line"><span class="number">2.</span>如何动态添加菜单项</span><br></pre></td></tr></table></figure>
<p>详细的创建步骤和流程请查看视频！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Android菜单</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[037 - Android Service入门到精通06 - 远程服务和前台服务]]></title>
    <link href="http://chenqichao.me/2014/05/19/045-Android-Tutorial-037/"/>
    <id>http://chenqichao.me/2014/05/19/045-Android-Tutorial-037/</id>
    <published>2014-05-18T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>远程服务和前台服务的创建和使用</p>
<a id="more"></a>
<ul>
<li>马上学Android 037 - Android Service入门到精通06 - 远程服务和前台服务</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0NjIzMjI0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>首先如果你是Android Studio的使用者，那么建议你先看一下这篇关于如何在<a href="http://qichaochen.github.io/2014/05/13/003-Android-Studio-AIDL/" target="_blank" rel="external">Android Studio下创建AIDL文件</a>。</p>
<p>远程服务运行的线程是独立于UI主线程的，需要使用AIDL和IPC进行通信，不推荐使用，详细的创建流程请查看视频教程！</p>
<p>前台服务的内容其实本质实在Service中使用Android通知栏的功能来到，主要涉及NotificationManager，通知栏的使用也比较容易，详细查看视频教程！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>远程服务和前台服务的创建和使用</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[博客变迁历史]]></title>
    <link href="http://chenqichao.me/2014/05/11/001-new-blog-home/"/>
    <id>http://chenqichao.me/2014/05/11/001-new-blog-home/</id>
    <published>2014-05-10T16:00:00.000Z</published>
    <updated>2015-11-17T18:19:40.000Z</updated>
    <content type="html"><![CDATA[<p>记录博客技术/主题的变更历史</p>
<a id="more"></a>
<ul>
<li><p><del>2014/05/11:花了不少时间，把博客和视频主页搬到Pages上，再也不用担心写博客和发视频不同步了O(∩_∩)O</del></p>
<ul>
<li><p><del>感谢Jekyll（发音 /‘dʒiːk əl/，”杰克尔”）团队Jekyll官网</del></p>
</li>
<li><p><del>感谢Jekyllcn团队的翻译让学习Jekyll更加简单Jekyllcn官网</del></p>
</li>
<li><p><del>感谢codepiano提供的如此简洁且功能强大的jekyll主题模板codepiano</del></p>
</li>
</ul>
</li>
<li><p><del>2015/01/20:由于jekyll对一些功能兼容性较差，将博文迁移至Hexo</del></p>
<ul>
<li><del><a href="http://hexo.io" target="_blank" rel="external">hexo.io</a></del></li>
</ul>
</li>
<li><p>2015/11/17:更换为Tranquilpeak主题</p>
<ul>
<li><a href="https://github.com/LouisBarranqueiro/tranquilpeak-hexo-theme" target="_blank" rel="external">Tranquilpeak</a></li>
<li><a href="http://667887.net/move-to-hexo.html" target="_blank" rel="external">http://667887.net/move-to-hexo.html</a></li>
<li><a href="http://blog.imandysoft.net/2015/08/modify-hexo-tranquilpeak-with-domestic-services/" target="_blank" rel="external">http://blog.imandysoft.net/2015/08/modify-hexo-tranquilpeak-with-domestic-services/</a></li>
<li><a href="http://chichele.li/tags/hexo/" target="_blank" rel="external">http://chichele.li/tags/hexo/</a></li>
<li><a href="http://www.fscwz.com/2015/11/01/weeked-do/" target="_blank" rel="external">http://www.fscwz.com/2015/11/01/weeked-do/</a></li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>记录博客技术/主题的变更历史</p>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://chenqichao.me/tags/Hexo/"/>
    
      <category term="Hexo" scheme="http://chenqichao.me/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[036 - Android Service入门到精通05 - Service和Thread的区别]]></title>
    <link href="http://chenqichao.me/2014/05/07/044-Android-Tutorial-036/"/>
    <id>http://chenqichao.me/2014/05/07/044-Android-Tutorial-036/</id>
    <published>2014-05-06T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>Service和Thread之间的关系认识</p>
<a id="more"></a>
<ul>
<li>马上学Android 036 - Android Service入门到精通05 - Service和Thread的区别</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0NzcxMzgw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>因为Service和Activity的线程id是一致（默认情况下），因此不能在Service里面执行耗时的操作来阻塞主线程。</p>
<p>下面给出一个Service的编写模板：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Service01</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">//执行耗时的后台操作</span></span><br><span class="line">                <span class="comment">//比如下载大文件...</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Bind</span> <span class="keyword">extends</span> <span class="title">Binder</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FileDownload</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="annotation">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="comment">//下载文件</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>Service和Thread之间的关系认识</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[035 - Android Service入门到精通04 - 如何销毁同时被绑定和启动的服务]]></title>
    <link href="http://chenqichao.me/2014/04/30/043-Android-Tutorial-035/"/>
    <id>http://chenqichao.me/2014/04/30/043-Android-Tutorial-035/</id>
    <published>2014-04-29T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>Service服务销毁相关内容</p>
<a id="more"></a>
<p>如果一个服务同时被绑定和启动时，那么如果正确的销毁这个服务呢？</p>
<ul>
<li>马上学Android 035 - Android Service入门到精通04 - 如何销毁同时被绑定和启动的服务</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0Mzk1NTAw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>首先一个要解决的问题是，多次取消绑定服务程序崩溃的问题，需要添加一个布尔值变量。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isBind = <span class="keyword">false</span>;</span><br><span class="line">在绑定的时候进行赋值：</span><br><span class="line"></span><br><span class="line">isBind = bindService(intent, serviceConnection, BIND_AUTO_CREATE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在取消绑定的时候进行判断</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isBind) &#123;</span><br><span class="line">  unbindService(serviceConnection);</span><br><span class="line">  isBind = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样通过简单的代码就可解决多次取消绑定服务带来的问题。</p>
<p>定义一个服务</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StartAndBindService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"StartAndBindService"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyBinderClass mybinder = <span class="keyword">new</span> MyBinderClass();</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.i(TAG,<span class="string">"StartAndBindService --&gt; onCreate"</span>);</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.i(TAG,<span class="string">"StartAndBindService --&gt; onDestroy"</span>);</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        Log.i(TAG,<span class="string">"StartAndBindService --&gt; onStartCommand"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onUnbind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        Log.i(TAG,<span class="string">"StartAndBindService --&gt; onUnbind"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onUnbind(intent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mybinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBinderClass</span> <span class="keyword">extends</span> <span class="title">Binder</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Show</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Log.i(TAG,<span class="string">"StartAndBindService --&gt; Show()"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注册Service</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">service</span> <span class="attribute">android:name</span>=<span class="value">"com.chen.service.StartAndBindService"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">service</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>实现绑定和启动服务的按钮响应</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ButtonListener</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span>(view.getId()) &#123;</span><br><span class="line">                <span class="keyword">case</span> R.id.btnStart_StartBindService:</span><br><span class="line">                    Intent intent = <span class="keyword">new</span> Intent(StartServiceActivity.<span class="keyword">this</span>, StartAndBindService.class);</span><br><span class="line">                    startService(intent);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> R.id.btnStop_StartBindService:</span><br><span class="line">                    Intent stopIntent = <span class="keyword">new</span> Intent(StartServiceActivity.<span class="keyword">this</span>, StartAndBindService.class);</span><br><span class="line">                    stopService(stopIntent);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> R.id.btnBind_StartBindService:</span><br><span class="line">                    Intent bindIntent = <span class="keyword">new</span> Intent(StartServiceActivity.<span class="keyword">this</span>, StartAndBindService.class);</span><br><span class="line">                    isBind = bindService(bindIntent,conn,BIND_AUTO_CREATE);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> R.id.btnUnBind_StartBindService:</span><br><span class="line">                    unbindService(conn);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p>运行程序的结果是：如果一个服务被启动了，那么如果同时被绑定的话，那么此时服务不会被重新创建。那么如果要销毁这个服务的话，直接调用stopService是无法停止服务的，需要通过调用unBindService来停止服务。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Service服务销毁相关内容</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[034 - Android Service入门到精通03 - 创建绑定形式的服务]]></title>
    <link href="http://chenqichao.me/2014/04/28/042-Android-Tutorial-034/"/>
    <id>http://chenqichao.me/2014/04/28/042-Android-Tutorial-034/</id>
    <published>2014-04-27T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>有了启动形式的服务之后，再来看看绑定服务的创建形式</p>
<a id="more"></a>
<ul>
<li>马上学Android 034 - Android Service入门到精通03 - 创建绑定形式的服务</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzU5ODk0NDIw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>需要创建一个继承自Service的类并重写<code>onBind()</code>方法，具体代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BindService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyBinder myBinder = <span class="keyword">new</span> MyBinder();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"BindService"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.i(TAG,<span class="string">"BindService - &gt; onCreate"</span>);</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        Log.d(TAG,<span class="string">"BindService - &gt; onStartCommand"</span>);<span class="comment">//只有startService会调用</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onUnbind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        Log.w(TAG,<span class="string">"BindService - &gt; onUnbind"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onUnbind(intent);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.e(TAG,<span class="string">"BindService - &gt; onDestroy"</span>);</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> myBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StartDownload</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">//模拟下载文件方法</span></span><br><span class="line">            Log.i(TAG,<span class="string">"BinderService正在执行下载任务"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>和启动服务不同的是，绑定形式服务需要返回一个<code>IBind</code>类型的服务,所以需要创建一个继承自Binder的类，并定义一个模拟下载的方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StartDownload</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//模拟下载文件方法</span></span><br><span class="line">    Log.i(TAG,<span class="string">"BinderService正在执行下载任务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后定义一个MyBinder对象</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> MyBinder myBinder = <span class="keyword">new</span> MyBinder();</span><br></pre></td></tr></table></figure>
<p>在onBind()方法后返回<code>myBinder</code>，这样就完成了绑定类型服务的创建。</p>
<p>有了绑定服务之后，需要在AndroidManifest.xml进行注册，当然最少需要指定Service名称属性。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">service</span> <span class="attribute">android:name</span>=<span class="value">"com.chen.service.BindService"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">service</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>有了绑定的服务之后，如何在Activity进行调用呢？这里有几个步骤：</p>
<p>1.需要定义一个MyBinder对象和ServiceConnection对象</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> BindService.MyBinder myBinder;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> ServiceConnection serviceConnection = <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName componentName, IBinder iBinder)</span> </span>&#123;</span><br><span class="line">            myBinder = (BindService.MyBinder) iBinder;</span><br><span class="line">            myBinder.StartDownload();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName componentName)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<p>有了上面的定义有就可以通过intent和bindService方法来到绑定服务：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//绑定服务</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(StartServiceActivity.<span class="keyword">this</span>, BindService.class);</span><br><span class="line">bindService(intent, serviceConnection, BIND_AUTO_CREATE);</span><br></pre></td></tr></table></figure>
<p>bindService需要传入相对于的intent和connection以及绑定的创建服务的标志。</p>
<p>取消绑定的话比较简单，代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">unbindService(serviceConnection);</span><br></pre></td></tr></table></figure>
<p>绑定服务相对于启动服务来说稍微复杂一点，需要创建更多的东西。这个有个问题，如何优化取消绑定？否则程序会因为取消两次而崩溃。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>有了启动形式的服务之后，再来看看绑定服务的创建形式</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[033 - Android Service入门到精通02 - 创建启动形式的服务]]></title>
    <link href="http://chenqichao.me/2014/04/28/041-Android-Tutorial-033/"/>
    <id>http://chenqichao.me/2014/04/28/041-Android-Tutorial-033/</id>
    <published>2014-04-27T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>启动形式的服务是比较简单的一种服务创建形式，那么如何来创建呢？</p>
<a id="more"></a>
<ul>
<li>马上学Android 033 - Android Service入门到精通02 - 创建启动形式的服务</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0ODY4MTQ0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>和其他组件类似，需要创建一个继承自Service的类并重写<code>onBind()</code>方法，具体代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StartService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"StartService"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        Log.i(TAG,<span class="string">"StartService-&gt;onCreate() Thread ID: "</span>+Thread.currentThread().getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        Log.w(TAG,<span class="string">"StartService-&gt;StartCommand()"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.e(TAG,<span class="string">"StartService-&gt;onDestroy()"</span>);</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>有了服务之后，需要在AndroidManifest.xml进行注册，当然最少需要指定Service名称属性。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">service</span> <span class="attribute">android:name</span>=<span class="value">"com.chen.service.StartService"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">service</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>另外在Activity中需要实现启动和停止按钮的响应函数，代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">this</span>.findViewById(R.id.btnStartService).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//启动服务</span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(StartServiceActivity.<span class="keyword">this</span>, StartService.class);</span><br><span class="line">        Log.i(<span class="string">"StartServiceActivity"</span>, <span class="string">"StartServiceActivity - &gt; "</span> + Thread.currentThread().getId());</span><br><span class="line">        startService(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.findViewById(R.id.btnStopService).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//停止服务</span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(StartServiceActivity.<span class="keyword">this</span>, StartService.class);</span><br><span class="line">        stopService(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>和启动Activity和BroadcastReceiver一样，启动和停止Service也需要通过<code>intent</code>来实现。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>启动形式的服务是比较简单的一种服务创建形式，那么如何来创建呢？</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[032 - Android Service入门到精通01]]></title>
    <link href="http://chenqichao.me/2014/04/27/040-Android-Tutorial-032/"/>
    <id>http://chenqichao.me/2014/04/27/040-Android-Tutorial-032/</id>
    <published>2014-04-26T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>什么是Service？</p>
<a id="more"></a>
<p>Service是Android的四大组件之一，主要用于在后台处理一些耗时的操作或者去执行某些需要长期运行的任务。必要的时候可以在程序退出的情况下，让Service在后台继续保持运行状态。</p>
<ul>
<li>马上学Android 032 - Android Service入门到精通01</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0NDE2MjQw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>Service的主要需要学习内容如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">*                                      Service“入门到精通”</span><br><span class="line">*</span><br><span class="line">* =============================================================================================</span><br><span class="line">* 一、什么是Service？</span><br><span class="line">*      Service是Android的四大组件之一，主要用于在后台处理一些耗时的逻辑，或者去执行某些需要长期运行的任务。</span><br><span class="line">*  必要的时候我们甚至可以在程序退出的情况下，让Service在后台继续保持运行状态。</span><br><span class="line">*</span><br><span class="line">*      注意：项目中的每一个Service都必须在AndroidManifest.xml中注册，</span><br><span class="line">*            注册形式：&lt;service android:name=""...&gt;&lt;/service&gt;</span><br><span class="line">*            节点属性说明：</span><br><span class="line">*            android:name      ---服务类名</span><br><span class="line">*            android:label     ---服务的名字，如果此项不设置，那么默认显示的服务名则为类名</span><br><span class="line">*            android:icon      ---服务的图标</span><br><span class="line">*            android:permission---申明此服务的权限，这意味着只有提供了该权限的应用才能控制或连接此服务</span><br><span class="line">*            android:process   ---表示该服务是否运行在另外一个进程，如果设置了此项，那么将会在包名后面加上这段字符串表示另一进程的名字</span><br><span class="line">*            android:enabled   ---如果此项设置为 true，那么Service将会默认被系统启动,不设置默认此项为false</span><br><span class="line">*            android:exported  ---表示该服务是否能够被其他应用程序所控制或连接，不设置默认此项为 false</span><br><span class="line">*</span><br><span class="line">* =============================================================================================</span><br><span class="line">*</span><br><span class="line">* 二、Service的分类：</span><br><span class="line">*</span><br><span class="line">*  1、按执行地方可以分为：本地服务（Local Service）和远程服务(Remote Service)</span><br><span class="line">*</span><br><span class="line">*     本地服务：该服务依附在主进程上，主进程被Kill后，服务便会终止</span><br><span class="line">*     远程服务：该服务是独立的进程，会占用一定资源，并且使用AIDL(Android接口定义语言)进行IPC(跨进程通信)稍微麻烦些</span><br><span class="line">*</span><br><span class="line">*     #其实remote服务还是很少见的，并且一般都是系统服务#</span><br><span class="line">*  -------------------------------------------------------------------------------------------</span><br><span class="line">*  2、按运行类型分类: 后台服务和前台服务</span><br><span class="line">*</span><br><span class="line">*     后台服务：默认的服务即为后台服务，即不会在通知一栏显示正在执行的服务</span><br><span class="line">*     前台服务：会在通知一栏显示 ONGOING 的 Notification</span><br><span class="line">*</span><br><span class="line">* --------------------------------------------------------------------------------------------</span><br><span class="line">*  3、按使用方式分类</span><br><span class="line">*</span><br><span class="line">*     启动服务(startService): 主要用于启动一个服务执行后台任务，不进行通信。停止服务使用stopService</span><br><span class="line">*     绑定服务(bindService)：该方法启动的服务要进行通信。停止服务使用unbindService</span><br><span class="line">*     启动服务和绑定服务同时使用：停止服务应同时使用stopService与unbindService</span><br><span class="line">*</span><br><span class="line">* ==========================================================================================</span><br><span class="line">*</span><br><span class="line">* 三、Service的生命周期</span><br><span class="line">*</span><br><span class="line">*  1、startService:</span><br><span class="line">*</span><br><span class="line">*      onCreate() -&gt; onStartCommand() -&gt; |Service running | -&gt; |Service stop| -&gt; onDestroy()</span><br><span class="line">*</span><br><span class="line">*  2、bindService:</span><br><span class="line">*</span><br><span class="line">*      onCreate() -&gt; onBind() -&gt; |Service running| -&gt; |all client unbind| -&gt; onUnbind() -&gt; onDestroy()</span><br><span class="line">*</span><br><span class="line">*  ==========================================================================================</span><br><span class="line">*</span><br><span class="line">* 四、Service和Activity的通信</span><br><span class="line">*</span><br><span class="line">*    startService开启的Service和Activity的关系其实并不大，只是Activity通知了Service一下可以启动了，</span><br><span class="line">*    如果要让它们有关联，那么onBind()就是用于Service和Activity建立关联的，</span><br><span class="line">*    具体做法：</span><br><span class="line">*    1、重写onBind()</span><br><span class="line">*    2、创建一个类继承Binder，添加目标代码（如下载音乐等等）</span><br><span class="line">*    3、在Activity创建创建了一个ServiceConnection的匿名类，</span><br><span class="line">*       在里面重写了onServiceConnected()方法和onServiceDisconnected()方法，</span><br><span class="line">*       这两个方法分别会在Activity与Service建立关联和解除关联的时候调用</span><br><span class="line">*    4、调用bindService(bindIntent, connection, BIND_AUTO_CREATE)</span><br><span class="line">*       注：第三个参数是一个标志位，这里传入BIND_AUTO_CREATE表示在Activity和Service建立关联后自动创建Service，</span><br><span class="line">*       这会使得MyService中的onCreate()方法得到执行，但onStartCommand()方法不会执行。</span><br><span class="line">*    5、unbindService(connection);</span><br><span class="line">*</span><br><span class="line">*  注：另外需要注意，任何一个Service在整个应用程序范围内都是通用的，即MyService不仅可以和MainActivity建立关联，</span><br><span class="line">*      还可以和任何一个Activity建立关联，而且在建立关联时它们都可以获取到相同的MyBinder实例</span><br><span class="line">*</span><br><span class="line">*  ==========================================================================================</span><br><span class="line">*</span><br><span class="line">* 五、Service和Thread得区别</span><br><span class="line">*</span><br><span class="line">*    一句话：Service和Thread之间没有任何关系！！！！！！！</span><br><span class="line">*</span><br><span class="line">*    说明：之所以有不少人会把它们联系起来，主要就是因为Service的后台概念。Thread我们大家都知道，</span><br><span class="line">*         是用于开启一个子线程，在这里去执行一些耗时操作就不会阻塞主线程的运行。而Service我们最初理解的时候，</span><br><span class="line">*         总会觉得它是用来处理一些后台任务的，一些比较耗时的操作也可以放在这里运行，这就会让人产生混淆了。</span><br><span class="line">*         但是Service其实是运行在主线程里的。不要把后台和子线程联系在一起！！！</span><br><span class="line">*</span><br><span class="line">*  ==========================================================================================</span><br><span class="line">*</span><br><span class="line">*  六、未完待续...</span><br><span class="line">*</span><br><span class="line">*  ==========================================================================================</span><br><span class="line">*/</span></span><br></pre></td></tr></table></figure>
<p>这里给出启动服务(startService)/绑定服务(bindService)的生命周期图</p>
<p><img src="http://tutorchen.qiniudn.com/andoridservicelifecycle.png"></p>
<p>两种生命周期执行的过程还是有点区别的。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>什么是Service？</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[031 - Android启动子线程的三种方式]]></title>
    <link href="http://chenqichao.me/2014/04/26/039-Android-Tutorial-031/"/>
    <id>http://chenqichao.me/2014/04/26/039-Android-Tutorial-031/</id>
    <published>2014-04-25T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>多线程的学习和使用多线程的学习和使用一直是学习一门语言的重点和难点</p>
<a id="more"></a>
<p>那么Android使用Java语言进行开发，理所当然支持Java创建线程的方法，只不过在使用过程中需要注意防止主线程ANR的不良用户体验。</p>
<ul>
<li>马上学Android 031 - Android启动子线程的三种方式</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0NDA4ODQ4/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>(视频在发布的时候，解析有些错误，导致视频有些地方没有声音和画面，大家见谅！)</p>
<p>在Java中创建使用主线程的方式主要有两种，第一种是类继承Thread重写run方法，第二种是实习Runnable接口并重写run方法。当然创建的方式和书写风格有多种多样。</p>
<p>在Android子线程是不能更改UI界面的内容，否则程序会崩溃，如果要在子线程中更改UI的话需要采用异步消息处理机制，主要使用到Handle。</p>
<ul>
<li>Android使用线程方式一：创建一个类继承Thread</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadingThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//执行耗时操作</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">6000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//创建消息对象</span></span><br><span class="line">        Message msg = <span class="keyword">new</span> Message();</span><br><span class="line">        <span class="comment">//设置消息常量</span></span><br><span class="line">        msg.what = STOP;</span><br><span class="line">        <span class="comment">//发送消息</span></span><br><span class="line">        handler.sendMessage(msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后再需要启动线程的地方创建对象并执行start方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LoadingThread loadingThread = <span class="keyword">new</span> LoadingThread();</span><br><span class="line"><span class="comment">//开启线程</span></span><br><span class="line">loadingThread.start();</span><br></pre></td></tr></table></figure>
<ul>
<li>Android使用线程方式二：新建一个Thread对象，在构造函数中传入一个实现Runnable接口对象，并执行start方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//线程执行内容</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">    <span class="comment">//开启线程</span></span><br><span class="line">thread.start();</span><br></pre></td></tr></table></figure>
<ul>
<li>Android使用线程方式三：直接让Activity实现Runnable接口，这样的方式是方式二的简化。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadTutorialActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span></span><br></pre></td></tr></table></figure>
<p>然后再Activity中重写run方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//执行线程操作</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后在需要启动线程的地方传入this对象即可构造一个线程对象。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Thread t = <span class="keyword">new</span> Thread(ThreadTutorialActivity.<span class="keyword">this</span>);</span><br><span class="line"><span class="comment">//启动线程</span></span><br><span class="line">t.start();</span><br></pre></td></tr></table></figure>
<p>Android除了支持Java的多线程机制还支持其他比如AsyncTask异步任务和Loader异步加载的方法，这些知识点后面会再次讲到，感兴趣的可以先了解一下。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>多线程的学习和使用多线程的学习和使用一直是学习一门语言的重点和难点</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[030 - 调用Barcode Scanner进行条码识别]]></title>
    <link href="http://chenqichao.me/2014/04/21/038-Android-Tutorial-030/"/>
    <id>http://chenqichao.me/2014/04/21/038-Android-Tutorial-030/</id>
    <published>2014-04-20T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>条形码在日常生活中有着广泛的应用，尤其是二维码，越来越多的移动应用都提供了扫描条码的功能，那么我们自己如何在来开发识别条码应用呢？</p>
<a id="more"></a>
<ul>
<li>马上学Android 030 - 调用Barcode Scanner进行条码识别</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0Mzg2Njk2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>当然如果自己从拍照到图像处理再到数据识别和解析都是自己来写的话是需要挺有难度的，那么开发过程中如果可以的话还是借助一些第三方开源库来实现可能会更好点。条码扫描的第三方库也是不少，但是对Android开发者来说可能，ZXing这个库是在合适不过的了。关于ZXing的信息大家可以网上搜索了解一下。</p>
<p>在Github上下载ZXing后，找到android-integration下得两个Java文件添加到工程中，这两个文件集成封装了调用和解析Barcode Scanner的方法。只要用很少的代码就可完成条码扫描的功能。调用方式如下：</p>
<p>在Activity中添加一个startActivityForResult的响应函数：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScanBarcodeActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button btnScanBarcode;</span><br><span class="line">    <span class="keyword">private</span> TextView tvScanBarcode;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_scan_barcode);</span><br><span class="line"></span><br><span class="line">        tvScanBarcode = (TextView)findViewById(R.id.tvScanBarcode);</span><br><span class="line">        btnScanBarcode = (Button) findViewById(R.id.btnScanBarcode);</span><br><span class="line">        btnScanBarcode.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//调用Barcode Scanner扫描条码</span></span><br><span class="line">                IntentIntegrator intentIntegrator = <span class="keyword">new</span> IntentIntegrator(ScanBarcodeActivity.<span class="keyword">this</span>);</span><br><span class="line">                intentIntegrator.initiateScan();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在IntentIntegrator中封装了很多的静态方法，使用时创建一个IntentIntegrator对象然后调研initiateScan()就可以启动Barcode Scanner，扫描结束可以返回，需要重新onActivityResult来响应扫描接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">    IntentResult scanResult = IntentIntegrator.parseActivityResult(requestCode,resultCode,data);</span><br><span class="line">    <span class="keyword">if</span>(scanResult != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="comment">//处理扫描结果</span></span><br><span class="line">        tvScanBarcode.setText(scanResult.toString());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//扫描识别未成功</span></span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>,<span class="string">"扫描识别未成功"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当然ZXing库也可以通过Jar文件方式来调用，这样就不用调用Barcode Scanner，如果感兴趣的话可以在看一下Zxing的文档。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>条形码在日常生活中有着广泛的应用，尤其是二维码，越来越多的移动应用都提供了扫描条码的功能，那么我们自己如何在来开发识别条码应用呢？</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[029 - 返回键捕获 应用程序退出的两种方式]]></title>
    <link href="http://chenqichao.me/2014/04/18/037-Android-Tutorial-029/"/>
    <id>http://chenqichao.me/2014/04/18/037-Android-Tutorial-029/</id>
    <published>2014-04-17T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>作为应用程序一个较好的用户体验应该是：在退出应用程序前询问用户是否真正退出？目前普遍做法是，一在退出前询问是否真正退出，二是连续按两下退出。</p>
<a id="more"></a>
<ul>
<li>马上学Android 029 - 返回键捕获 应用程序退出的两种方式</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0NjIwOTg4/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>实现上述两种应用退出方式需要在<code>onkeyDown()</code>来进行捕获返回键</p>
<p>在Activity中，如果需要动态注册广播官方文档建议在<code>onResume()</code>进行注册，在<code>onPause()</code>中取消注册。注册部分代码如下：</p>
<ul>
<li>应用程序退出方式一：确认退出对话框</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onKeyDown</span><span class="params">(<span class="keyword">int</span> keyCode, KeyEvent event)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_BACK)&#123;</span><br><span class="line">           AlertDialog.Builder alertDialog = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</span><br><span class="line">           alertDialog.setTitle(<span class="string">"提示"</span>);</span><br><span class="line">           alertDialog.setMessage(<span class="string">"确认退出马上学Android"</span>);</span><br><span class="line">           alertDialog.setPositiveButton(<span class="string">"确认"</span>,<span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">               <span class="annotation">@Override</span></span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">                   finish();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line"></span><br><span class="line">           alertDialog.setNegativeButton(<span class="string">"取消"</span>,<span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">               <span class="annotation">@Override</span></span><br><span class="line">               <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">                   <span class="keyword">return</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line"></span><br><span class="line">           alertDialog.show();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>应用程序退出方式二：连续按两次确认退出</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">long</span> exitTime = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onKeyDown</span><span class="params">(<span class="keyword">int</span> keyCode, KeyEvent event)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(keyCode == KeyEvent.KEYCODE_BACK &amp;&amp; event.getAction() == KeyEvent.ACTION_DOWN)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>((System.currentTimeMillis() - exitTime) &gt;<span class="number">2000</span>)&#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>,<span class="string">"再按一次退出应用程序"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">            exitTime = System.currentTimeMillis();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            finish();</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.onKeyDown(keyCode, event);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>作为应用程序一个较好的用户体验应该是：在退出应用程序前询问用户是否真正退出？目前普遍做法是，一在退出前询问是否真正退出，二是连续按两下退出。</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[028 - BroadcastReceiver的使用教程03 - 动态注册广播监听电池信息]]></title>
    <link href="http://chenqichao.me/2014/04/17/036-Android-Tutorial-028/"/>
    <id>http://chenqichao.me/2014/04/17/036-Android-Tutorial-028/</id>
    <published>2014-04-16T16:00:00.000Z</published>
    <updated>2015-11-18T15:41:41.000Z</updated>
    <content type="html"><![CDATA[<p>上面讲述的广播接收器都是静态方式注册的，那么如何动态注册广播接收器呢？</p>
<a id="more"></a>
<ul>
<li>马上学Android 028 - BroadcastReceiver的使用教程03 - 动态注册广播监听电池信息</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0NjIwOTg4/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>首先还是要创建一个广播接收器的类继承自BroadcastReceiver。</p>
<p>在Activity中，如果需要动态注册广播官方文档建议在<code>onResume()</code>进行注册，在<code>onPause()</code>中取消注册。注册部分代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onResume();</span><br><span class="line">    <span class="comment">//动态注册广播接收器</span></span><br><span class="line">    IntentFilter intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">    intentFilter.addAction(BATTERY_ACTION); <span class="comment">//自定义Action</span></span><br><span class="line">    registerReceiver(mBatteryBR,intentFilter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onPause();</span><br><span class="line">    <span class="comment">//取消注册广播接收器</span></span><br><span class="line">    unregisterReceiver(mBatteryBR);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里给出系统广播Intent.ACTION_BATTERY_CHANGED中所包含的信息：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"present"</span>　　　　(boolean)      -是否使用电池</span><br><span class="line"><span class="string">"level"</span>　　　　　  (<span class="keyword">int</span>)　　　   -电池剩余容量</span><br><span class="line"><span class="string">"scale"</span>　　　　    (<span class="keyword">int</span>)　　　   -电池最大值，通常为<span class="number">100</span>。</span><br><span class="line"><span class="string">"icon-small"</span>　    (<span class="keyword">int</span>)  　　   -图标ID。</span><br><span class="line"><span class="string">"voltage"</span>　　　  　(<span class="keyword">int</span>)　　　   -电池的电压（伏特）</span><br><span class="line"><span class="string">"temperature"</span>　   (<span class="keyword">int</span>)　　　   -电池的温度，<span class="number">0.1</span>度单位。例如 表示<span class="number">197</span>的时候，意思为<span class="number">19.7</span>度。</span><br><span class="line"><span class="string">"technology"</span>　　(String)   　　 -电池类型，例如，Li-ion等等。</span><br><span class="line"><span class="string">"plugged"</span>　　　   (<span class="keyword">int</span>)     　  -充电方式：</span><br><span class="line"><span class="string">"status"</span>　　　　  (<span class="keyword">int</span>)　　　    -电池状态：</span><br><span class="line">                          BatteryManager.BATTERY_STATUS_CHARGING：充电状态。</span><br><span class="line">                          BatteryManager.BATTERY_STATUS_DISCHARGING：放电状态。</span><br><span class="line">                          BatteryManager.BATTERY_STATUS_NOT_CHARGING：未充满。</span><br><span class="line">                          BatteryManager.BATTERY_STATUS_FULL：充满电。</span><br><span class="line">                          BatteryManager.BATTERY_STATUS_UNKNOWN：未知状态。</span><br><span class="line"></span><br><span class="line"><span class="string">"health"</span>　　　　  (<span class="keyword">int</span>)　　　    -健康状态：</span><br><span class="line">                          BatteryManager.BATTERY_HEALTH_GOOD：状态良好。</span><br><span class="line">                          BatteryManager.BATTERY_HEALTH_DEAD：电池没有电。</span><br><span class="line">                          BatteryManager.BATTERY_HEALTH_OVER_VOLTAGE：电池电压过高。</span><br><span class="line">                          BatteryManager.BATTERY_HEALTH_OVERHEAT：电池过热。</span><br><span class="line">                          BatteryManager.BATTERY_HEALTH_UNKNOWN：未知状态。</span><br></pre></td></tr></table></figure>
<p>有了上面电池改变广播的信息基础之后，就可以解析出想要的电池信息了，代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> BroadcastReceiver mBatteryBR = <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//处理Intent传回的电池信息</span></span><br><span class="line">        <span class="keyword">if</span>(intent.getAction().equals(BATTERY_ACTION))&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">int</span> status = intent.getIntExtra(<span class="string">"status"</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">int</span> health = intent.getIntExtra(<span class="string">"health"</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">boolean</span> present = intent.getBooleanExtra(<span class="string">"present"</span>, <span class="keyword">false</span>);</span><br><span class="line">            <span class="keyword">int</span> level = intent.getIntExtra(<span class="string">"level"</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">int</span> scale = intent.getIntExtra(<span class="string">"scale"</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">int</span> plugged = intent.getIntExtra(<span class="string">"plugged"</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">int</span> voltage = intent.getIntExtra(<span class="string">"voltage"</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">int</span> temperature = intent.getIntExtra(<span class="string">"temperature"</span>, <span class="number">0</span>);</span><br><span class="line">            String technology = intent.getStringExtra(<span class="string">"technology"</span>);</span><br><span class="line">            </span><br><span class="line">            String statusString = <span class="string">"未知状态"</span>;</span><br><span class="line">            <span class="comment">//电池状态的判断</span></span><br><span class="line">            <span class="keyword">switch</span>(status) &#123;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_STATUS_UNKNOWN:</span><br><span class="line">                    statusString = <span class="string">"状态未知"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_STATUS_CHARGING:</span><br><span class="line">                    statusString = <span class="string">"充电状态"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_STATUS_DISCHARGING:</span><br><span class="line">                    statusString = <span class="string">"放点状态"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_STATUS_NOT_CHARGING:</span><br><span class="line">                    statusString = <span class="string">"未充电"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_STATUS_FULL:</span><br><span class="line">                    statusString = <span class="string">"充满电"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            String healthString = <span class="string">"未知状态"</span>;</span><br><span class="line">            <span class="comment">//电池健康状态判断</span></span><br><span class="line">            <span class="keyword">switch</span> (health) &#123;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_UNKNOWN:</span><br><span class="line">                    healthString = <span class="string">"未知状态"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_GOOD:</span><br><span class="line">                    healthString = <span class="string">"状态好"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_OVERHEAT:</span><br><span class="line">                    healthString = <span class="string">"电池过热"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_DEAD:</span><br><span class="line">                    healthString = <span class="string">"电池没有电"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_OVER_VOLTAGE:</span><br><span class="line">                    healthString = <span class="string">"电池电压过高"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_HEALTH_UNSPECIFIED_FAILURE:</span><br><span class="line">                    healthString = <span class="string">"未知错误"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            String acString = <span class="string">"未知状态"</span>;</span><br><span class="line">            <span class="comment">//电池充电状态判断</span></span><br><span class="line">            <span class="keyword">switch</span> (plugged) &#123;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_PLUGGED_AC:</span><br><span class="line">                    acString = <span class="string">"直流充电"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BatteryManager.BATTERY_PLUGGED_USB:</span><br><span class="line">                    acString = <span class="string">"USB充电"</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//输出电池状态信息</span></span><br><span class="line">            tvBatteryInfo.setText(   <span class="string">"电池状态信息如下:\n"</span>+</span><br><span class="line">                    <span class="string">"\n是否使用电池: "</span> + String.valueOf(present)+</span><br><span class="line">                    <span class="string">"\n电池状态: "</span> + statusString +</span><br><span class="line">                    <span class="string">"\n电池电量: "</span> + String.valueOf(level) + <span class="string">"%"</span> +</span><br><span class="line">                    <span class="string">"\n电池健康状态: "</span> + healthString +</span><br><span class="line">                    <span class="string">"\n最大值: "</span> + String.valueOf(scale)+</span><br><span class="line">                    <span class="string">"\n充电方式: "</span> + acString +</span><br><span class="line">                    <span class="string">"\n电池电压: "</span> + String.valueOf(voltage) +</span><br><span class="line">                    <span class="string">"\n电池温度: "</span> + String.valueOf(temperature) +</span><br><span class="line">                    <span class="string">"\n电池类型: "</span> + technology);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>动态注册广播更加灵活，但是如果是要监听一些特殊广播如：开机启动广播，那么就得使用静态方式注册。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>上面讲述的广播接收器都是静态方式注册的，那么如何动态注册广播接收器呢？</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[027 -BroadcastReceiver的使用教程02 - 监听电话记录]]></title>
    <link href="http://chenqichao.me/2014/04/16/035-Android-Tutorial-027/"/>
    <id>http://chenqichao.me/2014/04/16/035-Android-Tutorial-027/</id>
    <published>2014-04-15T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>有了广播的基础概念之后，如果通过广播进行电话呼入呼出的监听？当然现在还做不到一种悄无声息的监听，因为你至少需要安装你写的应用！</p>
<a id="more"></a>
<ul>
<li>马上学Android 027 -BroadcastReceiver的使用教程02 - 监听电话记录</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0NzcxODE2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>电话的监听，想想肯定是需要申请一定的权限来实现的，需要申请的权限如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.PROCESS_OUTGOING_CALLS"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">uses-permission</span> <span class="attribute">android:name</span>=<span class="value">"android.permission.READ_PHONE_STATE"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>注册广播的方法和步骤在上一讲给出了，那么有了广播接收器之后，需要声明一个电话状态监听器</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PhoneStateListener phoneStateListener = <span class="keyword">new</span> PhoneStateListener()&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCallStateChanged</span><span class="params">(<span class="keyword">int</span> state, String incomingNumber)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCallStateChanged(state, incomingNumber);</span><br><span class="line">        <span class="keyword">switch</span> (state)&#123;</span><br><span class="line">            <span class="keyword">case</span> TelephonyManager.CALL_STATE_IDLE:</span><br><span class="line">                Log.i(<span class="string">"broadcast"</span>,<span class="string">"挂断"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> TelephonyManager.CALL_STATE_OFFHOOK:</span><br><span class="line">                Log.i(<span class="string">"broadcast"</span>,<span class="string">"接听"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> TelephonyManager.CALL_STATE_RINGING:</span><br><span class="line">                Log.i(<span class="string">"broadcast"</span>,<span class="string">"有电话呼入,来电号码:"</span>+incomingNumber);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>有了这个监听逻辑之后，那么在接收到电话状态改变的广播之后，需要对电话的状态进行判断（是呼入，还是呼出？）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (intent.getAction().equals(CALLACTION)) &#123;<span class="comment">//捕获准备进行拨号的消息</span></span><br><span class="line">        String phoneNumber = intent.getStringExtra(Intent.EXTRA_PHONE_NUMBER);</span><br><span class="line">        Log.i(<span class="string">"broadcast"</span>, <span class="string">"有人在再打电话:"</span> + phoneNumber);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">//今天呼入的电话状态</span></span><br><span class="line">        TelephonyManager telephonyManager = (TelephonyManager)context.getSystemService(Service.TELEPHONY_SERVICE);</span><br><span class="line">        telephonyManager.listen(phoneStateListener,PhoneStateListener.LISTEN_CALL_STATE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>telephonyManager的<code>listen()</code>需要传入上面定义的<code>phoneStateListener</code></p>
<p>这样就是实现了电话呼入和呼出的监听了！</p>
<p>（视频中在判断电话状态的呼入状态为写<code>break</code>语句，大家记得补上！）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>有了广播的基础概念之后，如果通过广播进行电话呼入呼出的监听？当然现在还做不到一种悄无声息的监听，因为你至少需要安装你写的应用！</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[026 - Android BroadcastReceiver的使用教程01]]></title>
    <link href="http://chenqichao.me/2014/04/14/034-Android-Tutorial-026/"/>
    <id>http://chenqichao.me/2014/04/14/034-Android-Tutorial-026/</id>
    <published>2014-04-13T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>BroadcastReceiver的学习使用</p>
<a id="more"></a>
<p>今天开始要来学习一下Android四大组件之一的BroadcastReceiver，在Android里面的广播机制是通过BroadcastReceiver来实现的，要需要Android的开发，广播机制是必不可少的内容。</p>
<ul>
<li>马上学Android 026 - Android BroadcastReceiver的使用教程01</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0NjIxNDM2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>广播主要是方便应用程序在系统级上进行消息的传递，而非在应用程序本身之间进行。每个应用程序可以对感兴趣的内容进行广播的注册，这样程序就能接收到感兴趣的内容了，学习Android广播需要涉及下面的内容：</p>
<p>####Broadcast Receiver 顾名思义“广播接收器” — 可以接收来自系统和应用的广播。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 如何创建Broadcast Receiver</span><br><span class="line">    <span class="tag">a</span>.新建一个继承BroadcastReceiver的类</span><br><span class="line">    <span class="tag">b</span>.重写<span class="function"><span class="title">onReceive</span><span class="params">()</span></span>方法</span><br><span class="line">    c.注册广播</span><br><span class="line">    </span><br><span class="line"><span class="number">2</span>.BroadcastReceiver的生命周期</span><br><span class="line">    调用广播执行完onReceive（）就结束。</span><br><span class="line">    注意！！！如果在<span class="function"><span class="title">onReceive</span><span class="params">()</span></span>执行时间过长(<span class="number">10s</span>)，系统会报出应用未响应（ANR）错误！解决方案</span><br><span class="line">    </span><br><span class="line"><span class="number">3</span>.注册广播方法</span><br><span class="line">    <span class="tag">a</span>.静态注册：AndroidManifest<span class="class">.xml</span></span><br><span class="line">    <span class="tag">b</span>.动态注册：Java代码注册</span><br><span class="line">    </span><br><span class="line"><span class="number">4</span>.广播类型</span><br><span class="line">    <span class="tag">a</span>.普通广播：所有监听某个广播的接收者，都能收到广播</span><br><span class="line">    <span class="tag">b</span>.有序广播：按接收者优先顺序接收，优先级在intent-<span class="attribute">filter</span>中priority属性设置(-<span class="number">1000</span> ~ <span class="number">1000</span>)</span><br></pre></td></tr></table></figure>
<p>如果把上面四部分内容掌握了，大部分关于广播的内容就都掌握了。</p>
<hr>
<p>创建广播的方法很简单和创建其他Android组件类似，创建一个继承自<code>BroadcastReceiver</code>的类，然后重新<code>onReceive()</code>方法即可，模板如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//接收到广播后执行的逻辑代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当然有了自定义的广播接收器之后，还是无法接收到系统或者应用程序发出的广播，为什么呢？因为你还没有告诉Android系统，你定义了一个广播接收器，创建广播的第二步就是要注册广播，注册方式用两种，下面看一下静态注册的方法，在AndroidManifest.xml里面进行组成：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">receiver</span> <span class="attribute">android:name</span>=<span class="value">"com.chen.broadcast.MyBroadcastReceiver"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">intent-filter</span> <span class="attribute">android:priority</span>=<span class="value">"1000"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"com.chen.action.NOTIFY"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在receiver节点的属性至少要给出name属性，另外在intent-filter节点下要给出action的名称，这样就完成了一个广播接收器的注册，那么注册完了广播接收器就会进行监听，如果捕获到广播那么就是执行onReceiver方法：</p>
<p>在应用程序中定义一个按钮，并实现发送广播的逻辑如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendBroadcastActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button btnSendBroadcast;</span><br><span class="line">    <span class="keyword">private</span> EditText etSendBroadcast;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_send_broadcast);</span><br><span class="line"></span><br><span class="line">        etSendBroadcast = (EditText) findViewById(R.id.etSendBroadcast);</span><br><span class="line">        btnSendBroadcast = (Button) findViewById(R.id.btnSendBroadcast);</span><br><span class="line"></span><br><span class="line">        btnSendBroadcast.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//如何发送广播？</span></span><br><span class="line">                String strMsg = etSendBroadcast.getText().toString();</span><br><span class="line">                Intent broadcastIntent = <span class="keyword">new</span> Intent();</span><br><span class="line">                <span class="comment">//设置intent的action，注意此处的action要和AndroidManif.xml的receiver的action要一致否则无法捕获</span></span><br><span class="line">                broadcastIntent.setAction(<span class="string">"com.chen.action.NOTIFY"</span>);</span><br><span class="line">                broadcastIntent.putExtra(<span class="string">"msg"</span>,strMsg);</span><br><span class="line">                sendBroadcast(broadcastIntent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当广播发送出去后，并且正确的捕获广播后，可以onReceiver进行响应，这里简单的用Toast弹出一条消息，另外注意不能在onReceiver中执行一些非常耗时的操作，否则程序会出现ANR！</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//接收到广播后执行的逻辑代码</span></span><br><span class="line">        String strMsg = intent.getExtras.getString(<span class="string">"msg"</span>);</span><br><span class="line">        Toast.makeText(context,<span class="string">"接收到的广播是："</span>+strMsg,Toast.LENGTH_SHORT)；</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>经过了三个步骤后就可完成Android的简单广播接收器的机制。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>BroadcastReceiver的学习使用</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[025 - 调用Android相机进行拍照]]></title>
    <link href="http://chenqichao.me/2014/04/10/033-Android-Tutorial-025/"/>
    <id>http://chenqichao.me/2014/04/10/033-Android-Tutorial-025/</id>
    <published>2014-04-09T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>学习完Intent和IntentFilter之后，实践的学习一下如何通过Intent来调用系统相机进行拍照，这种方法是Android相机拍照的方式之一：</p>
<a id="more"></a>
<ul>
<li>马上学Android 025 - 调用Android相机进行拍照</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjk3MTI1NDE2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>调用系统进行拍照方法是最简单的相机应用，只需要一个启动方式和一个能显示相机返回的图片信息的控件，比如ImageView控件，看一下布局文件：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:paddingLeft</span>=<span class="value">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingRight</span>=<span class="value">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingTop</span>=<span class="value">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingBottom</span>=<span class="value">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">"com.chen.activity.CaptureActivity"</span></span><br><span class="line">    <span class="attribute">android:background</span>=<span class="value">"#BBFFFF"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"300dp"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"300dp"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/ivCaptureImg"</span></span><br><span class="line">        <span class="attribute">android:layout_gravity</span>=<span class="value">"center"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"#FFCC00"</span></span><br><span class="line">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnCapture"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"@string/caputre_button"</span></span><br><span class="line">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>没有多余其他复杂的控件就能达到需求（有时候事情不要往复杂的地方走），有了布局文件和启动按钮之后就要看一下按钮的响应函数和相机返回响应函数的实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptureActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button btn;</span><br><span class="line">    <span class="keyword">private</span> ImageView ivCaptureImg;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_capture);</span><br><span class="line"></span><br><span class="line">        btn = (Button)findViewById(R.id.btnCapture);</span><br><span class="line">        ivCaptureImg = (ImageView)findViewById(R.id.ivCaptureImg);</span><br><span class="line"></span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//通过构造函数设置Intent的action值</span></span><br><span class="line">                Intent capIntent = <span class="keyword">new</span> Intent(MediaStore.ACTION_IMAGE_CAPTURE);</span><br><span class="line">                <span class="comment">//带有返回值的启动方式</span></span><br><span class="line">                startActivityForResult(capIntent,<span class="number">100</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">    * 相机拍照结束处理逻辑</span><br><span class="line">    */</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        <span class="keyword">if</span>(requestCode == <span class="number">100</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(resultCode == RESULT_OK)&#123;</span><br><span class="line">                <span class="comment">//显示图片到ImageView上</span></span><br><span class="line">                Bitmap bitmap = (Bitmap) data.getExtras().get(<span class="string">"data"</span>);</span><br><span class="line">                ivCaptureImg.setImageBitmap(bitmap);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(resultCode == RESULT_CANCELED)&#123;</span><br><span class="line">                <span class="comment">//提示用户未拍照成功</span></span><br><span class="line">                Toast.makeText(CaptureActivity.<span class="keyword">this</span>,<span class="string">"拍照未成功"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样通过很少的代码就简单的完成了一个调用系统相机的应用。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>学习完Intent和IntentFilter之后，实践的学习一下如何通过Intent来调用系统相机进行拍照，这种方法是Android相机拍照的方式之一：</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[024 - Intent和IntentFilter的详细介绍]]></title>
    <link href="http://chenqichao.me/2014/04/09/032-Android-Tutorial-024/"/>
    <id>http://chenqichao.me/2014/04/09/032-Android-Tutorial-024/</id>
    <published>2014-04-08T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>Intent使用已经要一段时间了，那么Intent到底是什么东西，它能做什么，这节课就来详细的看看Intent和IntentFilter</p>
<a id="more"></a>
<ul>
<li>马上学Android 024 - Intent和IntentFilter的详细介绍</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjk3MTE4OTMy/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>Intent是组件之间（eg.Activity、Service、BroadcastReceiver）的传递消息的媒介。</p>
<p>一、Intent的类型</p>
<ol>
<li>显式Intent</li>
</ol>
<p>直接设置目标组件的ComponentName，用于一个应用内部的消息传递，比如启动Activity或者Service，通过Intent的setComponent和setClass来制定目标组件的ComponentName</p>
<ol>
<li>隐式Intent</li>
</ol>
<p>没有指定明确的组件名称的Intent，由于隐式Intent没有明确的目标组件，所以Android系统会帮助应用程序寻找与Intent请求匹配的组件。而寻找的方式是将Intent请求与IntentFilter进行比较，如果IntentFilter中某一个组件匹配了，那么就是目标组件。IntentFilter需要考虑Intent的属性：action、data、category。</p>
<p>二、Intent的结构</p>
<p>Intent中主要包含两部分</p>
<ol>
<li>action：要执行的动作，例如：ACTION_EDIT</li>
<li>data:要做出的数据，以URI形式出现。</li>
</ol>
<p>除上面两部分数据之外，还有：</p>
<ol>
<li><p>category：该属性是执行action的附加信息。</p>
</li>
<li><p>type：显示指定Intent的数据类型</p>
</li>
<li><p>component： 被指定的Intent的目标组件的类名称</p>
</li>
<li><p>extras： Bundle类型的附加信息</p>
</li>
<li><p>flag：该属性用于通知系统如何启动目标的Activity，或者启动后采取什么样的操作</p>
</li>
</ol>
<p>三、什么是IntentFilter</p>
<p>使用隐式Intent时，并没有指定目标组件，那么系统如何找到目标组件？这时需要通过IntentFilter了，IntentFilter复杂过滤无法响应的Intent，只将符合条件的Intent进行处理。具体如下：</p>
<table>
<thead>
<tr>
<th>标记</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Action</td>
<td>IntentFilter可以有一个或者多个Action用于过滤，而且Intent请求只要有一个匹配其中的Action即可，如果IntentFilter没有设置action，那么所有的Intent都会通过</td>
</tr>
<tr>
<td>Data</td>
<td>IntentFilter能有一个或者多个Data，也可以没有。Data主要包含uri或者数据类型，在对data进行检查时，主要也是针对这两点进行比较。</td>
</tr>
<tr>
<td>Category</td>
<td>IntentFilter可以设置多个Category，只有当Intent的所用Category都能匹配IntentFilter的category时才能通过检查。</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<p>Intent使用已经要一段时间了，那么Intent到底是什么东西，它能做什么，这节课就来详细的看看Intent和IntentFilter</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[023 - StartActivityForResult的使用]]></title>
    <link href="http://chenqichao.me/2014/04/08/031-Android-Tutorial-023/"/>
    <id>http://chenqichao.me/2014/04/08/031-Android-Tutorial-023/</id>
    <published>2014-04-07T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>一个Activity如何发起一项计算任务给另外一个Activity然后返回计算结果？</p>
<a id="more"></a>
<p>当然，一种方式是可以通过之间讨论的Intent或者Bundle进行传值，另外一种方式是今天要讲的通过StartActivityForResult来达到目的。</p>
<ul>
<li>马上学Android 023 - StartActivityForResult的使用</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjk2MjIxODk2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>Activity-A通过<code>StartActivityForResult</code>方式启动Activity-B,那么在A代码中需要重新下面的方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    <span class="comment">//处理逻辑</span></span><br><span class="line">    <span class="keyword">switch</span>(requestCode) &#123;</span><br><span class="line">    <span class="keyword">case</span> RC_DATA_ACTIVITY:</span><br><span class="line">        <span class="keyword">if</span>(resultCode == RESULT_OK)&#123;</span><br><span class="line">          <span class="comment">//正常返回</span></span><br><span class="line">          </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(resultCode == RESULT_CANCELED)&#123;</span><br><span class="line">            <span class="comment">//异常返回</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要说明的是onActivityResult的三个参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>requestCode</td>
<td>请求码：用于标识请求来源(通俗点：判断发起者是谁？)</td>
</tr>
<tr>
<td>resultCode</td>
<td>结果码：用于标示返回结果的来源（通俗点：成功与否?）</td>
</tr>
<tr>
<td>data</td>
<td>返回带数据的Intent</td>
</tr>
</tbody>
</table>
<p>在被调用的ActivityB的处理逻辑如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent()</span><br><span class="line"><span class="comment">//绑定需要返回数据到Intent</span></span><br><span class="line">setResult(FLAG,intent);<span class="comment">//FLAG可以为RESULT_OK,也可以为RESULT_CANCELED</span></span><br><span class="line">finish();</span><br></pre></td></tr></table></figure>
<p>特别注意调用完<code>setResult()</code>之后需要调用<code>finish()</code>否则无法正常返回到Activity。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一个Activity如何发起一项计算任务给另外一个Activity然后返回计算结果？</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[022 - 使用Bundle在不同Activity之间传值]]></title>
    <link href="http://chenqichao.me/2014/04/02/030-Android-Tutorial-022/"/>
    <id>http://chenqichao.me/2014/04/02/030-Android-Tutorial-022/</id>
    <published>2014-04-01T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>在第19讲中介绍了通过Intent的在不同Activity之间传递数据，那么当需要传递的数据较多，且需要在多个Activity之间传值时，就需要通过Bundle来传递了。</p>
<a id="more"></a>
<ul>
<li>马上学Android 022 - 使用Bundle在不同Activity之间传值</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjk3MTI1OTky/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>使用Bundle进行传值适用于下面两种情况</p>
<ul>
<li>ActivityA -&gt; ActivityB -&gt; ActivityC</li>
<li>ActivityA -&gt; ActivityB, ActivityC</li>
</ul>
<p>传值模板代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line"></span><br><span class="line">...<span class="comment">//intent初始化</span></span><br><span class="line"></span><br><span class="line">Bundle bundle  = <span class="keyword">new</span> Bundle();</span><br><span class="line">bundle.putXXX(<span class="string">"key"</span>,value);</span><br><span class="line">intent.putExtra(bundle);</span><br></pre></td></tr></table></figure>
<p>取值的代码模板如下</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bundle bundle = <span class="keyword">this</span>.getIntent().getBundleExtra();</span><br><span class="line">ValuesType value = bundle.getXXX(<span class="string">"Key"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>在第19讲中介绍了通过Intent的在不同Activity之间传递数据，那么当需要传递的数据较多，且需要在多个Activity之间传值时，就需要通过Bundle来传递了。</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[021 - Android Studio的使用教程02]]></title>
    <link href="http://chenqichao.me/2014/04/01/029-Android-Tutorial-021/"/>
    <id>http://chenqichao.me/2014/04/01/029-Android-Tutorial-021/</id>
    <published>2014-03-31T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>本次视频继续介绍Android Studio的使用，主要是关于Android Studio的配置和一些使用技巧</p>
<a id="more"></a>
<ul>
<li>马上学Android 021 - Android Studio的使用教程02</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNzE0Nzc0MzI0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>使用快捷键的效率远大于使用鼠标的效率，所以写代码的过程中尽量有意识的使用快捷键！</p>
<p>1.常见问题</p>
<table>
<thead>
<tr>
<th>常见问题</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.中文乱码问题</td>
</tr>
<tr>
<td>2.如何完美显示中文</td>
</tr>
<tr>
<td>3.如何不让光标随意定位</td>
</tr>
<tr>
<td>4.如何显示行号</td>
</tr>
<tr>
<td>5.如何启动不自动打开工程</td>
</tr>
<tr>
<td>6.默认代码提示和自动补全与输入法快捷键冲突</td>
</tr>
<tr>
<td>7.去除自动补全的大小写敏感</td>
</tr>
<tr>
<td>8.如何保存文件</td>
</tr>
<tr>
<td>9.导入和导出自定义设置</td>
</tr>
</tbody>
</table>
<p>2.Android Studio常用快捷键</p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>Alt + Enter</td>
<td>导入包</td>
</tr>
<tr>
<td>Ctrl + Alt + L</td>
<td>格式化代码</td>
</tr>
<tr>
<td>Ctrl + Alt + O</td>
<td>优化导入的包和类</td>
</tr>
<tr>
<td>Alt + Insert</td>
<td>插入代码（如get/set方法）</td>
</tr>
<tr>
<td>Ctrl + E 或者 Alt + Shift + C</td>
<td>查看最近更改的代码</td>
</tr>
<tr>
<td>Ctrl + F</td>
<td>查找文本</td>
</tr>
<tr>
<td>Ctri + Shift + Space</td>
<td>自动补全代码</td>
</tr>
<tr>
<td>Ctrl + Space</td>
<td>代码提示</td>
</tr>
<tr>
<td>Ctrl + P</td>
<td>方法参数提示</td>
</tr>
<tr>
<td>Ctrl + X</td>
<td>剪切单行</td>
</tr>
<tr>
<td>Ctrl + D</td>
<td>复制选中</td>
</tr>
<tr>
<td>Ctrl + /或者Ctrl + Shift + /</td>
<td>添加注释</td>
</tr>
<tr>
<td>Ctrl + J</td>
<td>自动代码</td>
</tr>
<tr>
<td>Ctrl + E</td>
<td>最近打开文档</td>
</tr>
<tr>
<td>Ctrl + Q</td>
<td>显示注释文档</td>
</tr>
<tr>
<td>Ctrl + Shift + Up/Down</td>
<td>移动代码</td>
</tr>
<tr>
<td>Ctrl + W</td>
<td>旋转代码</td>
</tr>
<tr>
<td>Ctrl + [/]</td>
<td>跳到括号开头结尾</td>
</tr>
<tr>
<td>Ctrl + Alt + T</td>
<td>将代码加入如try/catch语句中</td>
</tr>
<tr>
<td>Ctrl + O</td>
<td>选择可以重写的方法</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<p>本次视频继续介绍Android Studio的使用，主要是关于Android Studio的配置和一些使用技巧</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[020 - Android Studio的使用教程01]]></title>
    <link href="http://chenqichao.me/2014/03/31/028-Android-Tutorial-020/"/>
    <id>http://chenqichao.me/2014/03/31/028-Android-Tutorial-020/</id>
    <published>2014-03-30T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>本次视频主要来介绍Android Studio的使用，如果你没接触过Android Studio，那么强烈建议你使用Android Studio来开发。</p>
<a id="more"></a>
<ul>
<li>马上学Android 020 - Android Studio的使用教程01</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkyNzMyODcy/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>1.安装Android Studio</p>
<table>
<thead>
<tr>
<th>OS</th>
<th>安装步骤</th>
</tr>
</thead>
<tbody>
<tr>
<td>Mac OS X</td>
<td><a href="http://qichaochen.github.io/2014/03/08/009-Android-Tutorial-002/" target="_blank" rel="external">查看《马上学Android》第二集</a></td>
</tr>
<tr>
<td>Widnows</td>
<td>1.正确配置Java环境 <br> 2.下载安装android-studio-bundle-XXXX-windows.exe <br> 3.按照安装向导正确安装Android Studio <br> 4.解决使用过程中遇到的问题</td>
</tr>
</tbody>
</table>
<ol>
<li>Gradle的配置</li>
</ol>
<p>在Android Studio 0.5.1以上版本可以通过离线配置。</p>
<p>在设置里面找到:Gradle -&gt; Global Gradle settings -&gt; Offline work</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本次视频主要来介绍Android Studio的使用，如果你没接触过Android Studio，那么强烈建议你使用Android Studio来开发。</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[019 - 使用Intent在不同的Activity之间传值]]></title>
    <link href="http://chenqichao.me/2014/03/27/027-Android-Tutorial-019/"/>
    <id>http://chenqichao.me/2014/03/27/027-Android-Tutorial-019/</id>
    <published>2014-03-26T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>Android在不同Activity之间传递数据的方式有很多种，那么今天就来学习一下最简单的通过Intent来传值。</p>
<a id="more"></a>
<ul>
<li>马上学Android 019 - 使用Intent在不同的Activity之间传值</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkxNDg1MTI0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>通过Intent传值的核心<code>Intent.putXXX(&quot;Key&quot;,&quot;Value&quot;)</code></p>
<p>在需要获取Intent数据的Activity中，通过下面模式来获取到传递的值：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">this</span>.getIntent()</span><br><span class="line">ValuesType value = intent.getXXX(<span class="string">"key"</span>);</span><br></pre></td></tr></table></figure>
<p>这样就可以完成数据的传递!</p>
<p>保存的数据可以使用<code>outState.putXXX</code>,XXX为对应类型的数据</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Android在不同Activity之间传递数据的方式有很多种，那么今天就来学习一下最简单的通过Intent来传值。</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[018 - 如何保存和恢复Activity的状态]]></title>
    <link href="http://chenqichao.me/2014/03/27/026-Android-Tutorial-018/"/>
    <id>http://chenqichao.me/2014/03/27/026-Android-Tutorial-018/</id>
    <published>2014-03-26T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>在使用Android手机一个很重要的用户体验是比如:编写短信时如果来了一个电话之后，在挂完电话回到短信界面应该还会有之前未编写完的短信，否则需要重新输入，那么如何实现这个功能呢？</p>
<a id="more"></a>
<ul>
<li>马上学Android 018 - 如何保存和恢复Activity的状态</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkxNDg2MTE2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>在<code>onCreate()</code>的参数<code>Bundle savedInstancState</code>是用于保存Activity的状态</p>
<p>保存Activity的状态使用的方法是：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSaveInstanceState</span><span class="params">(Bundle outState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onSaveInstanceState(outState);</span><br><span class="line">    outState.putInt(<span class="string">"count"</span>, count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_lifecycle);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (savedInstanceState != <span class="keyword">null</span>) &#123;</span><br><span class="line">        count = savedInstanceState.getInt(<span class="string">"count"</span>);</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">"count = "</span> + count, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>第一次启动时savedInstanceState为null，如果只想过<code>onSaveInstanceState（）</code>那么savedInstanceState则不为空</p>
<p>保存的数据可以使用<code>outState.putXXX</code>,XXX为对应类型的数据</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在使用Android手机一个很重要的用户体验是比如:编写短信时如果来了一个电话之后，在挂完电话回到短信界面应该还会有之前未编写完的短信，否则需要重新输入，那么如何实现这个功能呢？</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[017 - Activity的生命周期02]]></title>
    <link href="http://chenqichao.me/2014/03/26/025-Android-Tutorial-017/"/>
    <id>http://chenqichao.me/2014/03/26/025-Android-Tutorial-017/</id>
    <published>2014-03-25T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>学习Android一个很重要的部分就是Activity的生命周期，当然在3.0后加入了Fragment也是的Fragment的生命周期和Activity的生命周期联系更加密切，关于Fragment的生命周期后面会花比较多得时间来介绍，今天先看一下Activity的生命周期概念。</p>
<a id="more"></a>
<ul>
<li>马上学Android 017 - Activity的生命周期02</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkxNDg3MjMy/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>首先要重写Activity生命周期的方法，快速重写的方法有三种：</p>
<ul>
<li>第一种是在Android Studio中写入onCrea…那么会自动提示代码，直接回车即可完成重写</li>
<li>第二种是在Code选项卡-&gt;Override Methods旋转需要重写的方法</li>
<li>第三种是使用快捷 <code>Ctrl + o</code>(Mac)进行选择重写</li>
</ul>
<p>在Android里面可以通过例如Log.i(“TAG”,”MSG”);在Logcat里面输出调试信息</p>
<ul>
<li>第一个参数是：标志信息，由于过滤输出信息</li>
<li>第二个参数是：日志信息</li>
</ul>
<p>具体方法下面类型，不同的方法输出日志的颜色有区别，优先级有下列集中，是按照从低到高顺利排列的:</p>
<ul>
<li>V — Verbose (lowest priority)</li>
<li>D — Debug</li>
<li>I — Info</li>
<li>W — Warning</li>
<li>E — Error</li>
<li>F — Fatal</li>
<li>S — Silent (highest priority, on which nothing is ever printed)</li>
</ul>
<p>视频给出了如何添加消息过滤，不会的可以查看一下视频~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>学习Android一个很重要的部分就是Activity的生命周期，当然在3.0后加入了Fragment也是的Fragment的生命周期和Activity的生命周期联系更加密切，关于Fragment的生命周期后面会花比较多得时间来介绍，今天先看一下Activity的生命周期概念。</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[016 - Activity的生命周期01]]></title>
    <link href="http://chenqichao.me/2014/03/25/024-Android-Tutorial-016/"/>
    <id>http://chenqichao.me/2014/03/25/024-Android-Tutorial-016/</id>
    <published>2014-03-24T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>学习Android一个很重要的部分就是Activity的生命周期，当然在3.0后加入了Fragment也是的Fragment的生命周期和Activity的生命周期联系更加密切，关于Fragment的生命周期后面会花比较多得时间来介绍，今天先看一下Activity的生命周期概念。</p>
<a id="more"></a>
<ul>
<li>马上学Android 016 - Activity的生命周期01</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTUxODgw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>Google官方给出的生命周期流程图如下：</p>
<p><img src="http://tutorchen.qiniudn.com/activity%20lifecycle.png" alt="Activity Lifecycle"></p>
<ol>
<li>onCreate()</li>
</ol>
<p>当这个Activity第一次被创建的时候，调用此方法。这个方法通常用于：</p>
<ul>
<li>为Activity设置所使用的布局文件</li>
<li>为控件绑定监听事件等静态的设置操作</li>
</ul>
<p>是否可被系统杀死回收？ <code>否</code><br>下一个调用方法： <code>onStart()</code></p>
<ol>
<li>onStart()</li>
</ol>
<p>当Activity处于可见的状态的时候，调用此方法.</p>
<p>是否可被系统杀死回收？ <code>否</code><br>下一个调用方法： <code>onResume()</code></p>
<ol>
<li>onResume()</li>
</ol>
<p>系统能开始和用户进行交互时（能够获得用户的焦点，可以进行点击等操作时）调用该方法，执行完onResume()函数之后，系统就正常显示用户界面了。</p>
<p>是否可被系统杀死回收？ <code>否</code><br>下一个调用方法： <code>onPause()</code></p>
<ol>
<li>onPause()</li>
</ol>
<p>当系统启动另外一个Activity时，先调用前一个Activity的onPause()方法，这个方法通常用于：</p>
<ul>
<li>保存现有Activity的某些数据</li>
<li>停止动画</li>
</ul>
<p>是否可被系统杀死回收？ <code>是</code><br>下一个调用方法： <code>onResume() 或者 onStop</code></p>
<ol>
<li>onStop()</li>
</ol>
<p>当Activity处于完全不可见状态时(现有的Activity被新的Activity完全覆盖时)，调用之前Activity的此方法</p>
<p>是否可被系统杀死回收？ <code>是</code><br>下一个调用方法： <code>onRestart() 或者 onDestroy()</code></p>
<ol>
<li>onRestart()</li>
</ol>
<p>之前被onStop(),现在需要重新启动Activity</p>
<p>是否可被系统杀死回收？ <code>否</code><br>下一个调用方法： <code>onStart()</code></p>
<ol>
<li>onDestroy()</li>
</ol>
<p>销毁Activity，一般有两种情况：</p>
<ul>
<li>系统内存不足时，系统会回收一些不必要的Activity</li>
<li>执行finish()函数进行销毁</li>
</ul>
<p>是否可被系统杀死回收？ <code>是</code><br>下一个调用方法： <code>无</code></p>
<p>Activity的生命周期看似有点复杂，但是如果你理解了来龙去脉的话，也很容易掌握！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>学习Android一个很重要的部分就是Activity的生命周期，当然在3.0后加入了Fragment也是的Fragment的生命周期和Activity的生命周期联系更加密切，关于Fragment的生命周期后面会花比较多得时间来介绍，今天先看一下Activity的生命周期概念。</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[015 - 多个Button的监听器绑定]]></title>
    <link href="http://chenqichao.me/2014/03/24/023-Android-Tutorial-015/"/>
    <id>http://chenqichao.me/2014/03/24/023-Android-Tutorial-015/</id>
    <published>2014-03-23T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>多个按钮的绑定监听事件的学习</p>
<a id="more"></a>
<p>如果你已经学会了单个按钮的绑定监听事件<code>setOnClickListener</code>然后重写<code>onClick</code>，那么会不会有这样的疑问，如果节目上又N多个按钮，是不是要一个个这样写呢？答案肯定是否定的！那么该怎么实现，先看看视频~</p>
<ul>
<li>马上学Android 015 - 多个Button的监听器绑定</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTU1ODky/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>多个按钮的绑定监听事件实现方法有蛮多种的方式，我常用的是下面的方法：</p>
<ol>
<li><p>首先定义一个内部类并实现<code>View.onClickListener</code>,然后需要重写<code>onClick</code>方法，这个和直接调用<code>setOnClickListener</code></p>
</li>
<li><p>通过<code>view.getID()</code> 判断按下的是哪个控件？</p>
</li>
<li><p>声明并创建一个<code>ButtonListener listener = new ButtonListener();</code></p>
</li>
<li>通过<code>Button.setOnClickListener(listener)</code>完成按钮的绑定</li>
</ol>
<p>如果步骤3的声明和创建的分开的，例如本例，那么记得在按钮绑定listener之前创建，否则会报错！</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ButtonListener</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (view.getId()) &#123;</span><br><span class="line">                <span class="keyword">case</span> R.id.btnMainActivity:</span><br><span class="line">                    <span class="comment">//功能</span></span><br><span class="line">                    Intent i1 = <span class="keyword">new</span> Intent(IndexActivity.<span class="keyword">this</span>, MainActivity.class);</span><br><span class="line">                    startActivity(i1);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> R.id.btnSecondActivity:</span><br><span class="line">                    Intent i2 = <span class="keyword">new</span> Intent(IndexActivity.<span class="keyword">this</span>, SecondActivity.class);</span><br><span class="line">                    startActivity(i2);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>当然你也可以尝试其他方式，例如直接让<code>Activity</code>实现 <code>onClickListener</code>然后使用this进行绑定等等，使用方式就像萝卜青菜各有所爱！Enjoy~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>多个按钮的绑定监听事件的学习</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[014 - ScrollView DatePicker TimePicker的简单使用]]></title>
    <link href="http://chenqichao.me/2014/03/21/022-Android-Tutorial-014/"/>
    <id>http://chenqichao.me/2014/03/21/022-Android-Tutorial-014/</id>
    <published>2014-03-20T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>本次视频是Android基础控件的最后一次结束，没有介绍到的控件，会在后续的视频学习。</p>
<a id="more"></a>
<ul>
<li>马上学Android 014 - ScrollView DatePicker TimePicker的简单使用</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTU3Mjg0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>布局文件如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">ScrollView</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:scrollbars</span>=<span class="value">"vertical"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"#00BBFF"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--其他代码--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--其他代码--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="title">DatePicker</span></span><br><span class="line">                    <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">                    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                    <span class="attribute">android:id</span>=<span class="value">"@+id/dpPicker"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="title">TimePicker</span></span><br><span class="line">                    <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">                    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                    <span class="attribute">android:id</span>=<span class="value">"@+id/tpPicker"</span></span><br><span class="line">                    &gt;</span><span class="tag">&lt;/<span class="title">TimePicker</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ScrollView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>需要说明的是，在ScrollView节点下面只能有一个子节点，例如本示例的LinearLayout。补充一下ScrollView常用的XML属性</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>android:scrollbarSize</td>
<td>设置滚动条的宽度。</td>
</tr>
<tr>
<td>android:scrollbarStyle</td>
<td>设置滚动条的风格和位置。设置值：insideOverlay、insideInset、outsideOverlay、outsideInset</td>
</tr>
<tr>
<td>android:scrollbarThumbHorizontal</td>
<td>设置水平滚动条的drawable。     </td>
</tr>
<tr>
<td>android:scrollbarThumbVertical</td>
<td>设置垂直滚动条的drawable.</td>
</tr>
<tr>
<td>android:scrollbarTrackHorizontal</td>
<td>设置水平滚动条背景（轨迹）的色drawable</td>
</tr>
<tr>
<td>android:soundEffectsEnabled</td>
<td>设置点击或触摸时是否有声音效果</td>
</tr>
</tbody>
</table>
<p>DatePicker常用属性</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>android:calendarViewShown</td>
<td>是否显示日历。</td>
</tr>
<tr>
<td>android:startYear</td>
<td>设置可选开始年份。</td>
</tr>
<tr>
<td>android:endYear</td>
<td>设置可选结束年份。</td>
</tr>
<tr>
<td>android:maxDate</td>
<td>设置可选最大日期，以mm/dd/yyyy格式设置。</td>
</tr>
<tr>
<td>android:minDate</td>
<td>设置可选最小日期，以mm/dd/yyyy格式设置。</td>
</tr>
</tbody>
</table>
<p>Java代码如下所示：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DatePicker dpPicker;</span><br><span class="line">    <span class="keyword">private</span> TimePicker tpPicker;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        dpPicker = (DatePicker) findViewById(R.id.dpPicker);</span><br><span class="line">        tpPicker = (TimePicker) findViewById(R.id.tpPicker);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//DatePicker初始化和绑定监听事件</span></span><br><span class="line">        dpPicker.setCalendarViewShown(<span class="keyword">false</span>);</span><br><span class="line">        dpPicker.init(<span class="number">2014</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="keyword">new</span> DatePicker.OnDateChangedListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDateChanged</span><span class="params">(DatePicker datePicker, <span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(SecondActivity.<span class="keyword">this</span>,<span class="string">"你选取的日期为"</span>+year+<span class="string">"-"</span>+(month+<span class="number">1</span>)+<span class="string">"-"</span>+day,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        tpPicker.setIs24HourView(<span class="keyword">true</span>);</span><br><span class="line">        tpPicker.setCurrentHour(<span class="number">20</span>);</span><br><span class="line">        tpPicker.setCurrentMinute(<span class="number">20</span>);</span><br><span class="line">        tpPicker.setOnTimeChangedListener(<span class="keyword">new</span> TimePicker.OnTimeChangedListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTimeChanged</span><span class="params">(TimePicker timePicker, <span class="keyword">int</span> i, <span class="keyword">int</span> i2)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(SecondActivity.<span class="keyword">this</span>,<span class="string">"你准备发的事件是:"</span>+i+<span class="string">":"</span>+i2,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>DatePicker需要特别注意一个初始化的方法<code>init()</code>方法，用于做DatePicker控件的初始化，并且设置日期被修改后，回调的响应事件。</p>
<p>TimePicker通过 <code>setOnTimeChangedListener()</code> 方法设置，其传递一个 <code>TimePicker.OnTimeChangedListener</code> 接口，需要实现其中的onTimeChanged()方法。</p>
<p>DatePicker和TimePicker的使用不算复杂，但是算蛮常见的属性，大家可以学起来备用哦~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本次视频是Android基础控件的最后一次结束，没有介绍到的控件，会在后续的视频学习。</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[013 - ImageButton和ProgressBar的简单使用]]></title>
    <link href="http://chenqichao.me/2014/03/19/021-Android-Tutorial-013/"/>
    <id>http://chenqichao.me/2014/03/19/021-Android-Tutorial-013/</id>
    <published>2014-03-18T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>本次视频讲解的内容依然还是Android的基础控件ImageButton和ProgressBar，我觉得学习Android应该先把戏台搭好才能唱好戏。</p>
<a id="more"></a>
<ul>
<li>马上学Android 013 - ImageButton和ProgressBar的简单使用</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTgzNDg4/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>照例先看一下xml布局文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">ImageButton</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"120px"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"120px"</span></span><br><span class="line">    <span class="attribute">android:src</span>=<span class="value">"@drawable/timegoing"</span></span><br><span class="line">    <span class="attribute">android:layout_gravity</span>=<span class="value">"center"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/ibTimeGoing"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">ProgressBar</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_gravity</span>=<span class="value">"center"</span></span><br><span class="line">    <span class="attribute">android:visibility</span>=<span class="value">"gone"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/pbTimeWaiting"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>说明：<br>在ImageButton的 <code>android:src=&quot;@drawable/timegoing&quot;</code> 引用的是drawable文件下的图片文件</p>
<p>设置了ProgressBar的<code>android:visibility</code>，属性值含义如下：</p>
<table>
<thead>
<tr>
<th>值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>visible</td>
<td>控件可见</td>
</tr>
<tr>
<td>invisible</td>
<td>控件不可见，但是会占据布局空间</td>
</tr>
<tr>
<td>gone</td>
<td>控件不可见，不占据布局空间</td>
</tr>
</tbody>
</table>
<p>Java源码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ImageButton ibTimeGoing;</span><br><span class="line">    <span class="keyword">private</span> ProgressBar pbTimeWaiting;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_second);</span><br><span class="line"></span><br><span class="line">        ibTimeGoing = (ImageButton) findViewById(R.id.ibTimeGoing);</span><br><span class="line">        pbTimeWaiting = (ProgressBar) findViewById(R.id.pbTimeWaiting);</span><br><span class="line"></span><br><span class="line">        ibTimeGoing.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                pbTimeWaiting.setVisibility(View.VISIBLE);</span><br><span class="line"></span><br><span class="line">                Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                thread.start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因为ProgressBar在代码中设置了gone属性，所以要使用ProgressBar之前，需要先设置 <code>pbTimeWaiting.setVisibility(View.VISIBLE);</code></p>
<p>最终的效果就是下面所示的了，那么如何让这个ProgressBar消失，后面的课程会讲到，Stay tuned！</p>
<p><img src="http://tutorchen.qiniudn.com/timegoing.gif" alt="Demo"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本次视频讲解的内容依然还是Android的基础控件ImageButton和ProgressBar，我觉得学习Android应该先把戏台搭好才能唱好戏。</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[012 - RatingBar和SeekBar的简单使用]]></title>
    <link href="http://chenqichao.me/2014/03/18/020-Android-Tutorial-012/"/>
    <id>http://chenqichao.me/2014/03/18/020-Android-Tutorial-012/</id>
    <published>2014-03-17T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>本次视频继续来学习Android基础控件的使用，目的是希望在基础控件的使用中熟悉基本模式。</p>
<a id="more"></a>
<ul>
<li>马上学Android 012 - RatingBar和SeekBar的简单使用</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTkyNjUy/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>在xml布局文件中添加下面代码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_margin</span>=<span class="value">"10px"</span></span><br><span class="line">    <span class="attribute">android:text</span>=<span class="value">"给自己的状态评个分吧！"</span></span><br><span class="line">    <span class="attribute">android:textColor</span>=<span class="value">"#FF0000"</span></span><br><span class="line">    <span class="attribute">android:textSize</span>=<span class="value">"25dp"</span></span><br><span class="line">    <span class="attribute">android:layout_gravity</span>=<span class="value">"center"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">RatingBar</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:numStars</span>=<span class="value">"5"</span></span><br><span class="line">    <span class="attribute">android:isIndicator</span>=<span class="value">"false"</span></span><br><span class="line">    <span class="attribute">android:stepSize</span>=<span class="value">"0.5"</span></span><br><span class="line">    <span class="attribute">android:layout_gravity</span>=<span class="value">"center"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/rtbMyScore"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_margin</span>=<span class="value">"10px"</span></span><br><span class="line">    <span class="attribute">android:text</span>=<span class="value">"中华民族复兴进度:..."</span></span><br><span class="line">    <span class="attribute">android:textColor</span>=<span class="value">"#FF0000"</span></span><br><span class="line">    <span class="attribute">android:textSize</span>=<span class="value">"25dp"</span></span><br><span class="line">    <span class="attribute">android:layout_gravity</span>=<span class="value">"center"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/tvChinaScore"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">SeekBar</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:max</span>=<span class="value">"100"</span></span><br><span class="line">    <span class="attribute">android:progress</span>=<span class="value">"65"</span></span><br><span class="line">    <span class="attribute">android:id</span>=<span class="value">"@+id/skbChinaScore"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>需要特别说明的属性有</p>
<ol>
<li>RatingBar</li>
</ol>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>android:isIndicator</td>
<td>RatingBar是否是一个指示器（用户无法进行更改）</td>
</tr>
<tr>
<td>android:numStars</td>
<td>显示的星型数量，必须是一个整形值，像“100”。</td>
</tr>
<tr>
<td>android:rating</td>
<td>默认的评分，必须是浮点类型，像“1.2”。</td>
</tr>
<tr>
<td>android:stepSize</td>
<td>评分的步长，必须是浮点类型，像“1.2”。</td>
</tr>
</tbody>
</table>
<ol>
<li>SeekBar</li>
</ol>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>android:max</td>
<td>设置最大值</td>
</tr>
<tr>
<td>android:progress</td>
<td>设置当前值</td>
</tr>
</tbody>
</table>
<p>在Java代码中，进行相应的事件响应就可以达到目的了</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RatingBar rtbMyScore;</span><br><span class="line">    <span class="keyword">private</span> SeekBar skbChinaScore;</span><br><span class="line">    <span class="keyword">private</span> TextView tvChinaScore;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_second);</span><br><span class="line"></span><br><span class="line">        rtbMyScore = (RatingBar) findViewById(R.id.rtbMyScore);</span><br><span class="line">        skbChinaScore = (SeekBar) findViewById(R.id.skbChinaScore);</span><br><span class="line">        tvChinaScore = (TextView) findViewById(R.id.tvChinaScore);</span><br><span class="line"></span><br><span class="line">        rtbMyScore.setOnRatingBarChangeListener(<span class="keyword">new</span> RatingBar.OnRatingBarChangeListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRatingChanged</span><span class="params">(RatingBar ratingBar, <span class="keyword">float</span> v, <span class="keyword">boolean</span> b)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(SecondActivity.<span class="keyword">this</span>, <span class="string">"你给你自己的评分是:"</span> + v, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        skbChinaScore.setOnSeekBarChangeListener(<span class="keyword">new</span> SeekBar.OnSeekBarChangeListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgressChanged</span><span class="params">(SeekBar seekBar, <span class="keyword">int</span> i, <span class="keyword">boolean</span> b)</span> </span>&#123;</span><br><span class="line">                tvChinaScore.setText(<span class="string">"中华民族复兴进度是:"</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStopTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要设置RatingBar的<code>setOnRatingBarChangeListener</code>并重写<code>onRatingChanged</code>方法，设置SeekBar的<code>setOnSeekBarChangeListener</code>并重写下面方法</p>
<table>
<thead>
<tr>
<th>重写的方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>onStartTrackingTouch</td>
<td>该方法拖动进度条开始拖动的时候调用</td>
</tr>
<tr>
<td>onProgressChanged</td>
<td>该方法拖动进度条进度改变的时候调用</td>
</tr>
<tr>
<td>onStopTrackingTouch</td>
<td>该方法拖动进度条停止拖动的时候调用</td>
</tr>
</tbody>
</table>
<p>完成上述的代码和布局文件之后，启动应用程序就可以看到下面的效果</p>
<p><img src="http://tutorchen.qiniudn.com/tutorial12.png" alt="Demo"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本次视频继续来学习Android基础控件的使用，目的是希望在基础控件的使用中熟悉基本模式。</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[马上学Android] 011 - 使用Intent来启动另外一个Activity]]></title>
    <link href="http://chenqichao.me/2014/03/17/019-Android-Tutorial-011/"/>
    <id>http://chenqichao.me/2014/03/17/019-Android-Tutorial-011/</id>
    <published>2014-03-16T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>Intent的初步使用学习</p>
<a id="more"></a>
<p>在新建了一个Activity而且绑定了布局文件之后，如果跳转到这个Activity界面呢？在Android里面有很多机制可以实现界面的跳转，那么今天视频介绍的是使用Intent来进行跳转</p>
<ul>
<li>马上学Android 011 - 使用Intent来启动另外一个Activity</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTgyNDg0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>新建了一个Activity如果要在Android里面进行显示使用的话，必须要在AndroidManifest.xml进行相应的注册声明，否则跳转之后系统会找不到相应的布局文件导致程序崩溃！千万记得~那么如何注册呢，如果你是通过Android Studio直接创建一个Activity，那么Android Studio已经你注册声明好了，如果你是自己创建一个类去继承Activity并自己绑定布局文件，那么你需要在AndroidManifest.xml的Application节点下注册声明示例如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">application</span></span><br><span class="line">    <span class="attribute">android:allowBackup</span>=<span class="value">"true"</span></span><br><span class="line">    <span class="attribute">android:icon</span>=<span class="value">"@drawable/ic_launcher"</span></span><br><span class="line">    <span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span></span><br><span class="line">    <span class="attribute">android:theme</span>=<span class="value">"@style/AppTheme"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">        <span class="attribute">android:name</span>=<span class="value">"com.chen.activity.MainActivity"</span></span><br><span class="line">        <span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">     <span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">"com.XXX.activity.SecondActivity"</span> &gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>application下的第一个Activity节点（MainActivity）为应用启动Activity的注册信息，第二个Activity节点（SecondActivity）为自定义的节点，至少需要给出属性name的值，可以使用类似文件的绝对包路径，也可以使用相对包路径。</p>
<p>为了初学方便，可以在主界面添加一个Button按钮，点击后切换到第二个Activity，具体按钮响应代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">btnSwitch.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//跳转到第二个Activity</span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,SecondActivity.class);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>创建一个Intent对象，在构造函数里面传入起始Activity<code>MainActivity.this</code>和将要跳转到得Activity <code>SecondActivity.class</code></p>
<p>然后调用<code>startActivity(intent)</code>切换到第二个SecondActivity，这是一种比较简单的Activity切换方式。</p>
<p>切换一个新的Activity内容就是这么简单，试试看吧~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Intent的初步使用学习</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[010 - 新建一个Activity并绑定布局文件]]></title>
    <link href="http://chenqichao.me/2014/03/14/018-Android-Tutorial-010/"/>
    <id>http://chenqichao.me/2014/03/14/018-Android-Tutorial-010/</id>
    <published>2014-03-13T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>本节将要讲解如何创建一个Activity并且绑定一个新的布局文件，Yo~Check it out!</p>
<a id="more"></a>
<ul>
<li>马上学Android 010 - 新建一个Activity并绑定布局文件</li>
</ul>
<p>新建一个Activity并绑定布局文件，那么在视频中介绍的方法比较基础，需要分别创建Activity和XML布局文件，先看视频讲解~</p>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTg4MzUy/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>设置Activity的XML布局文件使用方法是：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setContentView(R.layout.activity_second) <span class="comment">//绑定的是layout文件下面的存在的布局文件。</span></span><br></pre></td></tr></table></figure>
<p>那么在新点版本的Android Studio都是支持直接创建一个界面的选项，具体步骤截图如下：</p>
<ul>
<li>右键Module，点击New</li>
</ul>
<p><img src="http://tutorchen.qiniudn.com/NewActivity1.jpg" width="400" height="400"></p>
<ul>
<li>旋转Activity，弹出新建Activity对话框，输入对应参数可以直接完成创建一个新的Activity，是不是很方便啊，赶紧试试吧~</li>
</ul>
<p><img src="http://tutorchen.qiniudn.com/NewActivity2.jpg" width="400" height="400"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本节将要讲解如何创建一个Activity并且绑定一个新的布局文件，Yo~Check it out!</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[009 - RadioButton和CheckBox控件的简单使用]]></title>
    <link href="http://chenqichao.me/2014/03/13/017-Android-Tutorial-009/"/>
    <id>http://chenqichao.me/2014/03/13/017-Android-Tutorial-009/</id>
    <published>2014-03-12T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>这一讲视频主要是在Android上使用RadioButton和CheckBox，以及复习一下使用Toast,效果如下，点击查看视频开始学习吧~</p>
<a id="more"></a>
<p><img src="http://tutorchen.qiniudn.com/rb.gif" alt="RadioButton CheckBox"></p>
<ul>
<li>马上学Android 009 - RadioButton和CheckBox控件的简单使用</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTkyNjg0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">          

<p>布局代码如下:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:background</span>=<span class="value">"#00BBFF"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">"com.chen.activity.MainActivity"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 本节课添加的xml代码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_margin</span>=<span class="value">"10dp"</span></span><br><span class="line">        <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"#FFFFFFFF"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:text</span>=<span class="value">"CCAV调查——你是幸福吗？"</span></span><br><span class="line">            <span class="attribute">android:textColor</span>=<span class="value">"#000000"</span></span><br><span class="line">            <span class="attribute">android:textSize</span>=<span class="value">"20dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">RadioGroup</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/rgCCAVSuvery"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">RadioButton</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/rbSoHappy"</span></span><br><span class="line">                <span class="attribute">android:text</span>=<span class="value">"幸福"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">RadioButton</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/rbNoHappy"</span></span><br><span class="line">                <span class="attribute">android:text</span>=<span class="value">"不幸福"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="title">RadioButton</span></span><br><span class="line">                <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">                <span class="attribute">android:id</span>=<span class="value">"@+id/rbZeng"</span></span><br><span class="line">                <span class="attribute">android:checked</span>=<span class="value">"true"</span></span><br><span class="line">                <span class="attribute">android:text</span>=<span class="value">"我姓曾"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">RadioGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">LinearLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_margin</span>=<span class="value">"10dp"</span></span><br><span class="line">        <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"#FFFFFFFF"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:text</span>=<span class="value">"CCAV调查——你平时的课外活动是什么？"</span></span><br><span class="line">            <span class="attribute">android:textColor</span>=<span class="value">"#000000"</span></span><br><span class="line">            <span class="attribute">android:textSize</span>=<span class="value">"20dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">CheckBox</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/cbLOL"</span></span><br><span class="line">            <span class="attribute">android:text</span>=<span class="value">"宿舍LOL"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">CheckBox</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:text</span>=<span class="value">"陪女友逛街"</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/cbGirlFriend"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">CheckBox</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">            <span class="attribute">android:checked</span>=<span class="value">"true"</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/cbCodingMoney"</span></span><br><span class="line">            <span class="attribute">android:text</span>=<span class="value">"苦逼搬砖"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>对应的java代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> RadioGroup rgCCAVSuvery;</span><br><span class="line">    <span class="keyword">private</span> CheckBox cbLOL, cbGirlFriend, cbCodingMoney;</span><br><span class="line">    <span class="keyword">private</span> Button btnSwitch;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> money = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">//绑定UI布局文件</span></span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//省略无关代码</span></span><br><span class="line"></span><br><span class="line">        rgCCAVSuvery = (RadioGroup) findViewById(R.id.rgCCAVSuvery);</span><br><span class="line"></span><br><span class="line">        cbLOL = (CheckBox) findViewById(R.id.cbLOL);</span><br><span class="line">        cbGirlFriend = (CheckBox) findViewById(R.id.cbGirlFriend);</span><br><span class="line">        cbCodingMoney = (CheckBox) findViewById(R.id.cbCodingMoney);</span><br><span class="line"></span><br><span class="line">        rgCCAVSuvery.setOnCheckedChangeListener(<span class="keyword">new</span> RadioGroup.OnCheckedChangeListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(RadioGroup radioGroup, <span class="keyword">int</span> checkedId)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">switch</span> (checkedId) &#123;</span><br><span class="line">                    <span class="keyword">case</span> R.id.rbSoHappy:</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"恭喜你状态很好，继续保持！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> R.id.rbNoHappy:</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"真的吗？推荐你每天看CCAV的新闻X播！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> R.id.rbZeng:</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"你是CCAV的忠实粉丝！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        cbLOL.setOnCheckedChangeListener(<span class="keyword">new</span> CompoundButton.OnCheckedChangeListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(CompoundButton compoundButton, <span class="keyword">boolean</span> b)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"骚年，没事多看看书，没事别整天LOL!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        cbGirlFriend.setOnCheckedChangeListener(<span class="keyword">new</span> CompoundButton.OnCheckedChangeListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(CompoundButton compoundButton, <span class="keyword">boolean</span> b)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"秀恩爱，你懂的!!!!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        cbCodingMoney.setOnCheckedChangeListener(<span class="keyword">new</span> CompoundButton.OnCheckedChangeListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(CompoundButton compoundButton, <span class="keyword">boolean</span> b)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (b) &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"码农，活着就是为了改变世界!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>代码比较直观，配合视频观看应该很容易理解~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这一讲视频主要是在Android上使用RadioButton和CheckBox，以及复习一下使用Toast,效果如下，点击查看视频开始学习吧~</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[008 - ImageView控件的简单使用]]></title>
    <link href="http://chenqichao.me/2014/03/12/016-Android-Tutorial-008/"/>
    <id>http://chenqichao.me/2014/03/12/016-Android-Tutorial-008/</id>
    <published>2014-03-11T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>这一讲视频主要是介绍如何在Android上显示图片,效果如下，点击查看视频开始学习吧~</p>
<a id="more"></a>
<ul>
<li>马上学Android 008 - ImageView控件的简单使用</li>
</ul>
<p><img src="http://tutorchen.qiniudn.com/praymh370.gif" alt="MH370"></p>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTkyNTk2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>如果你看完视频也完成了Demo应用，那么恭喜你又向前迈进了一步！接下来补充一下ImageView的一些高级属性</p>
<table>
<thead>
<tr>
<th>属性名称</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>android:adjustViewBounds</td>
<td>设置该属性为真可以在 ImageView 调整边界时保持图片的纵横比例.</td>
</tr>
<tr>
<td>android:cropToPadding</td>
<td>如果为真，会剪切图片以适应内边距的大小.</td>
</tr>
<tr>
<td>android:maxHeight</td>
<td>为视图提供最大高度的可选参数</td>
</tr>
<tr>
<td>android:maxHeight</td>
<td>为视图提供最大宽度的可选参数</td>
</tr>
<tr>
<td>android:scaleType</td>
<td>0.matrix 用矩阵来绘图 <br>1.fitXY 拉伸图片（不按比例）以填充View的宽高<br> 2.fitStart 按比例拉伸图片，拉伸后图片的高度为View的高度，且显示在View的左边 <br> 3.fitCenter 按比例拉伸图片，拉伸后图片的高度为View的高度，且显示在View的中间 <br> 4.fitEnd 按比例拉伸图片，拉伸后图片的高度为View的高度，且显示在View的右边<br> 5.center 按原图大小显示图片，但图片宽高大于View的宽高时，截图图片中间部分显示 <br> 6.centerCrop 按比例放大原图直至等于某边View的宽高显示 8.centerInside 当原图宽高或等于View的宽高时，按原图大小居中显示；反之将原图缩放至View的宽高居中显示。</td>
</tr>
<tr>
<td>android:tint</td>
<td>为图片设置着色颜色.</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<p>这一讲视频主要是介绍如何在Android上显示图片,效果如下，点击查看视频开始学习吧~</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[007 - 快到极致的Android模拟器]]></title>
    <link href="http://chenqichao.me/2014/03/12/015-Android-Tutorial-007/"/>
    <id>http://chenqichao.me/2014/03/12/015-Android-Tutorial-007/</id>
    <published>2014-03-11T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>这一讲主要是介绍最快的Android模拟器Genymotion的下载和安装，被自带的模拟器折磨的不行的同学们赶紧点击观看视频吧~</p>
<a id="more"></a>
<ul>
<li>马上学Android 007 - 快到极致的Android模拟器</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTg3NTI0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>####概述<br>Genymotion是一套完整的工具，它提供了Android虚拟环境。它简直就是开发者、测试人员、推销者甚至是游戏玩家的福音。</p>
<p>Genymotion支持Windows、Linux和Mac OS等操作系统，容易安装和使用：按简单的安装过程，选择一款Android虚拟设备，开启后就体验Genymotion带来的快感吧。</p>
<p><a href="https://www.genymotion.com" target="_blank" rel="external">Genymotion官方网站</a><br><a href="https://www.genymotion.cn" target="_blank" rel="external">Genymotion中文网站</a></p>
<p>####特性</p>
<p>#####最好的Android模拟体验</p>
<ul>
<li>支持OpenGL加速，提供最好的3D性能体验</li>
<li>可以从Google Play安装应用</li>
<li>支持全屏并改善了使用感受</li>
</ul>
<p>#####全控制</p>
<ul>
<li>可同时启动多个模拟器</li>
<li>支持传感器管理，如电池状态、GPS、Accelerator加速器</li>
<li>支持Shell控制模拟器</li>
<li>完全兼容ADB，您可以从主机控制您的模拟器</li>
</ul>
<p>#####管理设备</p>
<ul>
<li>易安装</li>
<li>兼容Microsoft Windows 32/64 bits, Mac OSX 10.5+ and Linux 32/64 bits</li>
<li>可以配置模拟器参数，如屏幕分辨率、内存大小、CPU数量</li>
<li>轻松下载、部署最新的Genymotion虚拟设备。</li>
<li>从Eclipse启动虚拟设备</li>
<li>使用Genymotion测试您的应用</li>
</ul>
<p>####环境要求</p>
<p>#####操作系统要求<br>需要满足以下操作系统之一</p>
<ul>
<li>Microsoft Windows XP SP3 (32 or 64 bits)</li>
<li>Microsoft Windows Vista (32 or 64 bits)</li>
<li>Microsoft Windows 7 (32 or 64 bits)</li>
<li>Linux Ubuntu 12.04</li>
<li>Linux Ubuntu 12.10</li>
<li>Mac OS X 10.X</li>
</ul>
<p>#####系统环境要求</p>
<ul>
<li>支持OpenGL 2.0</li>
<li>CPU支持VT-x或者AMD-V虚拟化，通过BIOS设置开启</li>
<li>至少512MB内存</li>
<li>至少提供100MB的硬盘空间供Genymotion安装，至少2GB硬盘空间用来部署Genymotion虚拟设备。有些可能需要8G以上，这主要取决于您安装在虚拟机里的应用程序。</li>
<li>可用网络连接（用于安装和更新）</li>
<li>系统显示分辨率不低于1024x768</li>
</ul>
<p>#####应用程序要求<br>Oracle VirtualBox &gt;= 4.1（版本越高越好）</p>
<p>####安装</p>
<p>#####注册</p>
<p>#####下载并安装Oracle VirtualBox<br>如果您的电脑上还没有安装VirtualBox，那请按照下面的步骤下载安装</p>
<ul>
<li>Windows用户<br>安装VirtualBox最简单的方式就是下载包含VirtualBox的Genymotion包，点击下载</li>
<li>MacOS X用户<br>打开VirtualBox下载页面，然后下载MacOS X的dmg文件，打开dmg文件然后按步骤安装。完成后记得重启。</li>
<li>Linux用户<br>检查资料库：大多数GNU/Linux都会自带VirtualBox安装包。如果没有或者您想要其他版本，那么打开VirtualBox下载页面</li>
</ul>
<p>#####安装Genymotion<br>根据您的系统，安装有所不同：</p>
<ul>
<li>Windows<br>  1.双击安装文件<br>  2.选择安装语言并点击下一步[Next]<br>  3.再次点击下一步[Next]<br>  4.如果需要，可更改安装路径，点击浏览[Browse..]（默认路径是C:\Program Files\Genymobile\Genymotion），然后点击下一步[Next]<br>  5.选择是否创建快捷菜单[Don’t create a Start Menu folder]再次点击下一步[Next]<br>  6.选择是否创建桌面快捷方式[Create a desktop icon]，然后点击下一步[Next]<br>  7.点击安装[Install]按钮<br>  8.点击完成[Finish]按钮</li>
<li>MacOS X<br>  1.打开dmg安装文件<br>  2.移动Genymotion和Genymotion shell到应用程序目录</li>
<li>Linux<br>  没在Linux配置过，需要的自行Google一下</li>
</ul>
<p>####快速开始</p>
<ol>
<li>启动Genymotion</li>
<li>创建一个新的设备（需要验证用户名和密码）</li>
<li>加载成功可以在云端列表选择所需的设备进行下载</li>
<li>安装完毕启动模拟器（体验神速的模拟器）<br><img src="http://tutorchen.qiniudn.com/virtual_device_home.jpg" alt="Genymotion"></li>
</ol>
<p>####插件安装</p>
<ul>
<li>Eclipse插件</li>
<li>Android Studio插件</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>这一讲主要是介绍最快的Android模拟器Genymotion的下载和安装，被自带的模拟器折磨的不行的同学们赶紧点击观看视频吧~</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[006 - Edit的简单使用及布局的排版]]></title>
    <link href="http://chenqichao.me/2014/03/11/014-Android-Tutorial-006/"/>
    <id>http://chenqichao.me/2014/03/11/014-Android-Tutorial-006/</id>
    <published>2014-03-10T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>这一讲我们通过讲解来学习一下EditText控件的使用以及对UI进行简单的优化，熟悉常用属性以及它们的含义，点击观看视频吧~</p>
<a id="more"></a>
<ul>
<li>马上学Android 006 - Edit的简单使用及布局的排版</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTkzNTIw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>完整的布局文件如下：</p>
<ul>
<li>activity_main.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:background</span>=<span class="value">"#00BBFF"</span> </span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">"com.chen.activity.MainActivity"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">EditText</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"哈哈，我通过点击鼠标轻易赚了..."</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/etGoalMoney"</span></span><br><span class="line">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"点我一次赚一元"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnGetMoney"</span> /&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"点击一次损失一元"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnLoseMoney"</span> /&gt;</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>得益于Android Studio强大的实时代码预览功能，我们可以随时调整我们的代码来达到目的，下面给出java代码</p>
<ul>
<li>MainActivity.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button btnGetMoney; <span class="comment">//声明按钮控件变量</span></span><br><span class="line">    <span class="keyword">private</span> TextView tvGetMoney; <span class="comment">//声明文本控件变量</span></span><br><span class="line">    <span class="keyword">private</span> Button btnLoseMoney;</span><br><span class="line">    <span class="keyword">private</span> EditText etGoalMoney;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> money = <span class="number">0</span> <span class="comment">//声明统计变量</span></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savaedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        btnGetMoney = (Button) findViewById(R.id.btnGetMoney); <span class="comment">//绑定按钮控件</span></span><br><span class="line">        btnLoseMoney = (Button) findViewById(R.id.btnLoseMoney); <span class="comment">//绑定按钮控件</span></span><br><span class="line">        tvGetMoney = (TextView) findViewById(R.id.tvGetMoney); <span class="comment">//绑定文本控件</span></span><br><span class="line">        etGoalMoney = (EditText) findViewById(R.id.etGoalMoney); <span class="comment">//绑定输入框控件</span></span><br><span class="line">                </span><br><span class="line">        <span class="comment">//绑定按钮监听器        </span></span><br><span class="line">        btnGetMoney.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                String strInputMoney = etGoalMoney.getText().toString().trim();</span><br><span class="line">                <span class="keyword">int</span> iMoney = Integer.parseInt(strInputMoney);</span><br><span class="line">                <span class="keyword">if</span> (iMoney == money) &#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"你经过努力已经完成目标！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    money++;</span><br><span class="line">                    tvGetMoney.setText(<span class="string">"哈哈，我通过点击鼠标轻易赚了"</span> + money + <span class="string">"元"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        btnGetMoney.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">             <span class="annotation">@Override</span></span><br><span class="line">             <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(money == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="comment">//提示用户，使用Toast提示</span></span><br><span class="line">                    Toast.makeText(Mainactivity.<span class="keyword">this</span>,<span class="string">"现在已经是穷光蛋了，不要再按了!"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    money--;</span><br><span class="line">                    tvGetMoney.setText(<span class="string">"哈哈，我通过点击鼠标轻易赚了"</span> + money + <span class="string">"元"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">             &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述代码需要解释的应该是怎么从EditText获取达到一个整数? 答案是通过EditText的getText();</p>
<figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> strInputMoney = etGoalMoney.getText<span class="literal">()</span>.toString<span class="literal">()</span>.trim<span class="literal">()</span>;</span><br><span class="line"><span class="built_in">int</span> iMoney = <span class="type">Integer</span>.parseInt(strInputMoney);</span><br></pre></td></tr></table></figure>
<p>通过动手编写代码然后看到运行的效果会不会很有成就感啊？</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这一讲我们通过讲解来学习一下EditText控件的使用以及对UI进行简单的优化，熟悉常用属性以及它们的含义，点击观看视频吧~</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[马上学Android] 005 - Button TextView的简单使用02]]></title>
    <link href="http://chenqichao.me/2014/03/10/013-Android-Tutorial-005/"/>
    <id>http://chenqichao.me/2014/03/10/013-Android-Tutorial-005/</id>
    <published>2014-03-09T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>学习一下Android的基础控件Button 和 TextView的简单配合使用</p>
<a id="more"></a>
<p><img src="http://tutorchen.qiniudn.com/andorid002.gif" width="400" height="400"></p>
<ul>
<li>马上学Android 005 - Button TextView的简单使用02</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjkwMTkzMTQw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>完整的布局文件如下：</p>
<ul>
<li>activity_main.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:background</span>=<span class="value">"#00BBFF"</span> </span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">"com.chen.activity.MainActivity"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"哈哈，我通过点击鼠标轻易赚了..."</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/tvGetMoney"</span></span><br><span class="line">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"点我一次赚一元"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnGetMoney"</span> /&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"点击一次损失一元"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnLoseMoney"</span> /&gt;</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样就完成两个基本控件的定义，可以通过它们的属性来控制控件的样式，现在我们只需要了解基本的属性即可。定义好了布局文件就可以在Java代码进行动态操作。代码如下</p>
<ul>
<li>MainActivity.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button btnGetMoney; <span class="comment">//声明按钮控件变量</span></span><br><span class="line">    <span class="keyword">private</span> TextView tvGetMoney; <span class="comment">//声明文本控件变量</span></span><br><span class="line">    <span class="keyword">private</span> Button btnLoseMoney;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> money = <span class="number">0</span> <span class="comment">//声明统计变量</span></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savaedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        btnGetMoney = (Button) findViewById(R.id.btnGetMoney); <span class="comment">//绑定按钮控件</span></span><br><span class="line">        btnLoseMoney = (Button) findViewById(R.id.btnLoseMoney); <span class="comment">//绑定按钮控件</span></span><br><span class="line">        tvGetMoney = (TextView) findViewById(R.id.tvGetMoney); <span class="comment">//绑定文本控件</span></span><br><span class="line">                </span><br><span class="line">        <span class="comment">//绑定按钮监听器        </span></span><br><span class="line">        btnGetMoney.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                money++;</span><br><span class="line">                tvGetMoney.setText(<span class="string">"哈哈，我通过点击鼠标轻易赚了"</span> + money + <span class="string">"元"</span>); <span class="comment">//显示最新money</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        btnGetMoney.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">             <span class="annotation">@Override</span></span><br><span class="line">             <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(money == <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="comment">//提示用户，使用Toast提示</span></span><br><span class="line">                    Toast.makeText(Mainactivity.<span class="keyword">this</span>,<span class="string">"现在已经是穷光蛋了，不要再按了!"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    money--;</span><br><span class="line">                    tvGetMoney.setText(<span class="string">"哈哈，我通过点击鼠标轻易赚了"</span> + money + <span class="string">"元"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">             &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>部署到真机或者模拟器看看效果吧！</p>
<hr>
<p>上面是视频录制的内容，下面更新一下Toast的使用大全，如果你想看看如何高级使用Toast继续往下走着，翻译至<a href="http://developer.android.com/guide/topics/ui/notifiers/toasts.html" target="_blank" rel="external">Google官方文档</a></p>
<ul>
<li>基本版</li>
</ul>
<p>首先创建一个通过makeText()创建一个Toast对象，需要传入三个参数1.context:上下文，2.text:显示文本，3.duration:显示时间，可以使用Toast.LENGTH_SHORT/Toast.LENGTH_LONG或者直接传入0/1，然后调用show()函数</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Context context = getApplicationContext();</span><br><span class="line">CharSequence text = <span class="string">"Hello toast!"</span>;</span><br><span class="line"><span class="keyword">int</span> duration = Toast.LENGTH_SHORT;</span><br><span class="line"></span><br><span class="line">Toast toast = Toast.makeText(context, text, duration);</span><br><span class="line">toast.show();</span><br></pre></td></tr></table></figure>
<ul>
<li>设置显示位置</li>
</ul>
<p>可以通过setGravity(int,int,int)来设置显示的位置</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">toast.setGravity(Gravity.TOP|Gravity.LEFT, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">//设置显示左上角</span></span><br></pre></td></tr></table></figure>
<ul>
<li>设置自定义Toast布局</li>
</ul>
<p>在layout中声明布局如toast_layout.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">              <span class="attribute">android:id</span>=<span class="value">"@+id/toast_layout_root"</span></span><br><span class="line">              <span class="attribute">android:orientation</span>=<span class="value">"horizontal"</span></span><br><span class="line">              <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">              <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">              <span class="attribute">android:padding</span>=<span class="value">"8dp"</span></span><br><span class="line">              <span class="attribute">android:background</span>=<span class="value">"#DAAA"</span></span><br><span class="line">              &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ImageView</span> <span class="attribute">android:src</span>=<span class="value">"@drawable/droid"</span></span><br><span class="line">               <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">               <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">               <span class="attribute">android:layout_marginRight</span>=<span class="value">"8dp"</span></span><br><span class="line">               /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">android:id</span>=<span class="value">"@+id/text"</span></span><br><span class="line">              <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">              <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">              <span class="attribute">android:textColor</span>=<span class="value">"#FFF"</span></span><br><span class="line">              /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>注意必须要有<code>android:id=&quot;@+id/toast_layout_root&quot;</code>，然后在Java代码中实现解析：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">LayoutInflater inflater = getLayoutInflater();</span><br><span class="line">View layout = inflater.inflate(R.layout.custom_toast,</span><br><span class="line">                               (ViewGroup) findViewById(R.id.toast_layout_root));</span><br><span class="line"></span><br><span class="line">TextView text = (TextView) layout.findViewById(R.id.text);</span><br><span class="line">text.setText(<span class="string">"This is a custom toast"</span>);</span><br><span class="line"></span><br><span class="line">Toast toast = <span class="keyword">new</span> Toast(getApplicationContext());</span><br><span class="line">toast.setGravity(Gravity.CENTER_VERTICAL, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">toast.setDuration(Toast.LENGTH_LONG);</span><br><span class="line">toast.setView(layout);</span><br><span class="line">toast.show();</span><br></pre></td></tr></table></figure>
<p>这样就完成了自定义的Toast界面显示了，你实现了没？</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>学习一下Android的基础控件Button 和 TextView的简单配合使用</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[马上学Android] 004 - Button TextView的简单使用01]]></title>
    <link href="http://chenqichao.me/2014/03/10/011-Android-Tutorial-004/"/>
    <id>http://chenqichao.me/2014/03/10/011-Android-Tutorial-004/</id>
    <published>2014-03-09T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>学习一下Android的基础控件Button 和 TextView的简单使用</p>
<a id="more"></a>
<p><img src="http://tutorchen.qiniudn.com/android004.gif" width="400" height="400"></p>
<ul>
<li>马上学Android 004 - Button TextView的简单使用01</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjg3MDEwNjI0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>在布局文件中添加一个EditText的输入框控件，并且优化了布局文件，让布局看起来好看一些，相信通过前面的学习之后，下面的代码对你来说不会是阅读障碍了！</p>
<ul>
<li>activity_main.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:background</span>=<span class="value">"#00BBFF"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">tools:context</span>=<span class="value">"com.chen.activity.MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">EditText</span></span><br><span class="line">       <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">       <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">       <span class="attribute">android:id</span>=<span class="value">"@+id/etGoalMoney"</span></span><br><span class="line">       <span class="attribute">android:inputType</span>=<span class="value">"none"</span></span><br><span class="line">       <span class="attribute">android:hint</span>=<span class="value">"请输入你期望的第一桶金的金额"</span></span><br><span class="line">       <span class="attribute">android:layout_margin</span>=<span class="value">"10px"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"点我一次赚一元"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"#BBFF00"</span></span><br><span class="line">        <span class="attribute">android:layout_margin</span>=<span class="value">"10px"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnGetMoney"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"点击一次损失一元"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"#FF0000"</span></span><br><span class="line">        <span class="attribute">android:layout_margin</span>=<span class="value">"10px"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnLoseMoney"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"哈哈，经过努力目前我已经有...元"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_margin</span>=<span class="value">"10px"</span></span><br><span class="line">        <span class="attribute">android:textColor</span>=<span class="value">"#0000FF"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"20dp"</span></span><br><span class="line">        <span class="attribute">android:layout_gravity</span>=<span class="value">"center"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/tvGetMoney"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样就完成两个基本控件的定义，可以通过它们的属性来控制控件的样式，现在我们只需要了解基本的属性即可。定义好了布局文件就可以在Java代码进行动态操作。代码如下</p>
<ul>
<li>MainActivity.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button btnGetMoney; <span class="comment">//声明按钮控件变量</span></span><br><span class="line">    <span class="keyword">private</span> TextView tvGetMoney; <span class="comment">//声明文本控件变量</span></span><br><span class="line">    <span class="keyword">private</span> Button btnLostMoney;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> money = <span class="number">0</span> <span class="comment">//声明统计变量</span></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savaedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        btnGetMoney = (Button) findViewById(R.id.btnGetMoney); <span class="comment">//绑定按钮控件</span></span><br><span class="line">        tvGetMoney = (TextView) findViewById(R.id.tvGetMoney); <span class="comment">//绑定文本控件</span></span><br><span class="line">                </span><br><span class="line">        <span class="comment">//绑定按钮监听器        </span></span><br><span class="line">        btnGetMoney.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                money++;</span><br><span class="line">                tvGetMoney.setText(<span class="string">"哈哈，我通过点击鼠标轻易赚了"</span> + money + <span class="string">"元"</span>); <span class="comment">//显示最新money</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样就完成了第一个简单的小应用，部署到真机或者模拟器看看效果吧！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>学习一下Android的基础控件Button 和 TextView的简单使用</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[马上学Android] 003 - Android Studio工程目录初步了解]]></title>
    <link href="http://chenqichao.me/2014/03/09/010-Android-Tutorial-003/"/>
    <id>http://chenqichao.me/2014/03/09/010-Android-Tutorial-003/</id>
    <published>2014-03-08T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>这一讲我们要来看看Android Studio工程目录的各个文件夹及文件的含义。</p>
<a id="more"></a>
<ul>
<li>马上学Android 003 - Android Studio工程目录初步了解</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjg2NTM1NjQ4/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<p>下面列出新版Android Studio的工程目录结构如下图所示：</p>
<p><img src="http://tutorchen.qiniudn.com/project.png"></p>
<table>
<thead>
<tr>
<th>文件/文件夹(第一层)</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>.idea</td>
<td>包含一些工程配置的xml文件</td>
</tr>
<tr>
<td>app</td>
<td>module名称，类似于eclipse的Project</td>
</tr>
<tr>
<td>build</td>
<td>这个工程编译生成的文件，类似eclipse的bin文件夹</td>
</tr>
<tr>
<td>gradle</td>
<td>构建工程的Gradle Wrapper</td>
</tr>
<tr>
<td>.gitignore</td>
<td>在Git版本控制中用于忽略文件或者文件夹的配置文件</td>
</tr>
<tr>
<td>build.gradle</td>
<td>工程的gradle编译配置文件</td>
</tr>
<tr>
<td>gradlew / gradlew.bat</td>
<td>Gradle启动脚本</td>
</tr>
<tr>
<td>local.properties</td>
<td>配置SDK等路径的属性文件</td>
</tr>
<tr>
<td>XXX.iml</td>
<td>工程配置文件</td>
</tr>
<tr>
<td>settings.gradle</td>
<td>gradle设置文件</td>
</tr>
</tbody>
</table>
<hr>
<p>上面中很多文件我们是不用太关注的只有不乱修改就可以保证正常的开发，下面介绍Android Studio中主要的也是重要的部分就Module部分</p>
<table>
<thead>
<tr>
<th>app展开目录</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>build</td>
<td>module编译生成的文件</td>
</tr>
<tr>
<td>libs</td>
<td>放置库文件的文件夹</td>
</tr>
<tr>
<td>src</td>
<td>源代码</td>
</tr>
<tr>
<td>.gitignore/app.iml/build.gradle</td>
<td>类似工程目录</td>
</tr>
<tr>
<td>proguard-rules.pro</td>
<td>用户代码混淆的配置文件</td>
</tr>
</tbody>
</table>
<hr>
<table>
<thead>
<tr>
<th>src目录展开</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>anroidTest</td>
<td>android测试</td>
</tr>
<tr>
<td>main/java</td>
<td>java源码</td>
</tr>
<tr>
<td>main/res</td>
<td>资源文件</td>
</tr>
<tr>
<td>AndroidManifest.xml</td>
<td>anroid应用配置文件</td>
</tr>
</tbody>
</table>
<hr>
<p>res资源文件夹在Android的应用开发地位和Java源码同等重要，下面列出res可以创建的所有文件夹的含义</p>
<table>
<thead>
<tr>
<th>res目录展开</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>animator</td>
<td>属性动画xml</td>
</tr>
<tr>
<td>anim</td>
<td>逐帧动画和补间动画xml</td>
</tr>
<tr>
<td>color</td>
<td>颜色xml</td>
</tr>
<tr>
<td>drawable</td>
<td>图片资源（中/低/高/超高…分辨率）</td>
</tr>
<tr>
<td>layout</td>
<td>布局文件xml</td>
</tr>
<tr>
<td>menu</td>
<td>菜单xml</td>
</tr>
<tr>
<td>raw</td>
<td>原始文件（.ogg等）</td>
</tr>
<tr>
<td>values</td>
<td>值xml</td>
</tr>
<tr>
<td>xml</td>
<td>任意xml</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<p>这一讲我们要来看看Android Studio工程目录的各个文件夹及文件的含义。</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[[马上学Android] 002 - Android开发环境的配置02]]></title>
    <link href="http://chenqichao.me/2014/03/08/009-Android-Tutorial-002/"/>
    <id>http://chenqichao.me/2014/03/08/009-Android-Tutorial-002/</id>
    <published>2014-03-07T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>开放环境配置</p>
<a id="more"></a>
<p>在上一讲<a href="http://qichaochen.github.io/2014/03/08/008-Android-Tutorial-001/" target="_blank" rel="external">Android开发环境的配置01</a>中介绍了Android最新的发展情况（截止至Google 2014 I/O）,并给出了开发Android所需要的环境和工具，那么接下来实战搭配环境。</p>
<ul>
<li>马上学Android 002 - Android开发环境的配置02</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjg2NTE0NTQ0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<ol>
<li>Java环境配置</li>
</ol>
<p>首先到Oracle官网下载<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">Java SE</a>,根据自己电脑类型和版本下载对应的<br>java JDK(点击查看大图)</p>
<p><img src="http://tutorchen.qiniudn.com/JDK-Downloads.png" width="250" height="330"></p>
<p>下载完成后点击进行安装，默认安装即可，安装完毕后如果是Windows用户需要配置Java的环境变量，如果你是Windows用户移步<a href="http://jingyan.baidu.com/article/925f8cb836b26ac0dde0569e.html" target="_blank" rel="external">配置Java环境的百度经验</a><br>需要确保你在命令行能识别javac命令，如果不能识别，那么就是环境变量没配置成，返回去再次配置一下(照着抄不至于抄错把！)</p>
<p>在cmd命令行窗口输入javac<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac</span><br></pre></td></tr></table></figure></p>
<p>如果显示下面信息则是正常配置</p>
<p><img src="http://tutorchen.qiniudn.com/cmd.png" width="300" height="330"></p>
<p>如果是Mac用户的话，只需要安装对应的pkg即可，安装完毕以为这你可以进行下一步了！是不是很简单啊！</p>
<ol>
<li>下载安装Android Studio</li>
</ol>
<p>Google在去年也就2013的I/O大会上发布全新的Android开发工具IDE(Android Stduio)，进过一年多的发展虽然还是beta版本没有正式版，但是这一年多的发展Android Studio已经足够强大，虽然它的入门门槛相比较基于Eclipse的ADT来的高，但是基于Intellij IDEA的Android Studio依然是日后Google主推的Android开发工具（啊！！！什么是Intellij IDEA？后面的视频教程会专门提到！慢慢来~),Android Studio的下载和安装也基本是一键安装了，省去以前ADT的各种配置，Google真是业界良心的公司啊！</p>
<ul>
<li>首先下载<a href="https://developer.android.com/sdk/installing/studio.html" target="_blank" rel="external">Android Studio</a></li>
</ul>
<p>根据自己电脑的版本和类型选择不同版本进行下载，下载完毕后进行正常安装即可！</p>
<pre><code>友情提醒！不要轻易升级<span class="keyword">Android </span>Studio鉴于本人几次因为犯了升级控的病之后升级了IDE，
结果天朝的和谐网络你懂的，导致升级后某些组件无法正常下载来适配当前的版本。
</code></pre><p>如下载并安装成功了之后就可以进行创建第一个App了，下面给出最新版IDE的新建工程步骤截图</p>
<p><img src="http://tutorchen.qiniudn.com/Android-Studio-01.png" width="250" height="230"></p>
<p><img src="http://tutorchen.qiniudn.com/Android-Studio-02.png" width="250" height="230"></p>
<p><img src="http://tutorchen.qiniudn.com/Android-Studio-03.png" width="250" height="230"></p>
<p><img src="http://tutorchen.qiniudn.com/Android-Studio-04.png" width="250" height="230"></p>
<p><img src="http://tutorchen.qiniudn.com/Android-Studio-05.png" width="250" height="230"></p>
<p>点击Finish之后，创建完了工程，有一个”鬼门关”要闯，那就是Gradle的下载，由于Android Studio是基于Gradle进行App的构建，且没有内置Gradle组件，必须通过网络下载，可是下载过程如果运气好，很快就可以下载完毕，如果运气不好那么呵呵，前面的准备都白做了，没有运行！如果下载不到gradle，怎么办呢？后面的会介绍“如何离线配置Gradle”（再次吐槽一下天朝的网络，希望你顺利的Gradle的下载，起步阶段不气馁啊）接下来如何将没有添加过一行代码的App部署手机或者模拟器呢，接着往下看。</p>
<p><img src="http://tutorchen.qiniudn.com/Android-Studio-06.png" width="250" height="230"></p>
<p>在模拟器运行结果如下图：</p>
<p><img src="http://tutorchen.qiniudn.com/Android-Studio-07.png" width="250" height="230"></p>
<p>如果你有手机（没有？作为一名想成为Android开发者的你怎么能没有？？？），那么只需要你按照能正常被电脑识别，如果不行就先连上某些手机管家，自动帮你下载USB驱动，完了关闭管家类软件，不然有可能ADB被占用，然后点击运行按钮部署到手机。</p>
<p>经过了上面不算复杂，但却需要你花点时间配置后，以后你就可以安心的学习Android开发了，你还在等什么开始配置你自己的开发环境吧！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>开放环境配置</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android开发环境的配置01]]></title>
    <link href="http://chenqichao.me/2014/03/08/008-Android-Tutorial-001/"/>
    <id>http://chenqichao.me/2014/03/08/008-Android-Tutorial-001/</id>
    <published>2014-03-07T16:00:00.000Z</published>
    <updated>2015-11-18T15:30:05.000Z</updated>
    <content type="html"><![CDATA[<p>开发环境配置</p>
<a id="more"></a>
<p>《马上学Andoid》这个系列的博文整理自本人录制的视频教程，欢迎转载学习，转载请注明出处!</p>
<p><img src="http://tutorchen.qiniudn.com/Android%20Intro.png" alt="Android" title="Android"></p>
<ul>
<li>[马上学Android] - 001 Android开发环境配置01</li>
</ul>
<embed src="http://player.youku.com/player.php/sid/XNjg2NTAyMzAw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">


<p>在介绍Android的开发环境配置之前，有必要来说一下今年Google的I/O大会，因为录制视频是在三月份，所以有必要更新一下今年Google I/O大会上发布的一些新的产品和内容，看看Google如何建立庞大的Android帝国：</p>
<ol>
<li>Android L操作系统的发布</li>
</ol>
<p>Android L的发布带来了很多重要更新，其中就有设计语言——Material Design。Material Design未来将会在统一Google的产品,也必定将会引领应用设计的潮流。</p>
<p><img src="http://tutorchen.qiniudn.com/l-dev-prev.png" alt="Android L" title="Android L"></p>
<p>此外Android L默认采用了ART编译器，抛弃了Dalvik，使得系统更加流畅，同时兼容64位处理器。</p>
<ol>
<li>Android Wear</li>
</ol>
<p>在今年的发布会上，每个上台讲演的人都带着一个Android Wear，可见Google对Android Wear也是相当重视，Android Wear可以非常方便的完成一下日常生活中<br>需要的任务和功能，相信不久的将来，大街小巷都有Android Wear的身影。</p>
<p><img src="http://tutorchen.qiniudn.com/android-wear-lead.jpg" alt="Android Wear" title="Andriod Wear"></p>
<ol>
<li>Android Auto</li>
</ol>
<p>在苹果发布CarPlay之后，Google也跟进发布了Android Auto并和各大汽车厂商进行合作，目的是以导航、通信、音乐三大功能为主，<br>通过语音操作、Google Map等自家的服务，体验还是非常棒的，而且该车载中心主要是屏幕投射来实现的，用户可以获得一致性的操作体验.</p>
<p><img src="http://tutorchen.qiniudn.com/Android-Auto.jpg" alt="Android Auto" title="Andriod Auto"></p>
<ol>
<li>Android TV</li>
</ol>
<p>Android TV从界面来看，主打简洁的卡片式 UI ，功能上则分为视频、应用、游戏等，和其他一些智能电视系统较为类似。<br>值得一提的是，Android TV 支持用手机、平板等设备来对智能电视进行控制，也可以将 Android 手机做为游戏摇杆来使用。此外语音控制的效率非常高，能够直接对电视节目进行精准搜索。</p>
<p><img src="http://tutorchen.qiniudn.com/Android-TV.jpg" alt="Android Auto" title="Andriod Auto"></p>
<p>当然还有其他产品和服务的发布，这里就一一列举了，但是对开发人员来说的好消息，上面的产品的SDK和相关的套件都是在官网上可以下载的！大爱Google啊</p>
<p>好，说了怎么多Google I/O 2014的内容，下面看一下Android开发需要哪些要求和如何配置开发环境，第一讲的内容比较轻松，下面的表格列出了Android开发所需环境：</p>
<table>
<thead>
<tr>
<th style="text-align:center">PC &amp; OS</th>
<th style="text-align:center">Windows、Mac OS X、Linux </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">JDK</td>
<td style="text-align:center"><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">Java 8 JDK</a></td>
</tr>
<tr>
<td style="text-align:center">IDE</td>
<td style="text-align:center">Android Studio(推荐)、ADT(基于Eclipse)</td>
</tr>
<tr>
<td style="text-align:center">手机或者模拟器</td>
<td style="text-align:center">一台配备至少4.0以上的Android手机、使用模拟器</td>
</tr>
</tbody>
</table>
<p>如何将上述的开发环境和开发工具搭配起来并开始进行第一个Android App的开发，将在下一讲的视频给出，欢迎大家继续关注！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>开发环境配置</p>]]>
    
    </summary>
    
      <category term="马上学Android" scheme="http://chenqichao.me/tags/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
      <category term="马上学Android" scheme="http://chenqichao.me/categories/%E9%A9%AC%E4%B8%8A%E5%AD%A6Android/"/>
    
  </entry>
  
</feed>
